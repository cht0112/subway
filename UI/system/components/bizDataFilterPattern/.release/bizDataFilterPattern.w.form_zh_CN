<?xml version="1.0" encoding="UTF-8"?>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:ajx="http://www.ajaxforms.net/2006/ajx" xmlns:o="urn:schemas-microsoft-com:office:office" xmlns:v="urn:schemas-microsoft-com:vml" style="height:100%;width:100%;" version="2.0">  
  <head> 
    <link href="/form/xforms/xforms.css" rel="stylesheet" type="text/css"></link>  
    <link href="/form/justep/calendar.css" rel="stylesheet" type="text/css"></link>  
    <link href="/form/justep/showMessage.css" rel="stylesheet" type="text/css"></link>  
    <link href="/form/dhtmlx/dhtmlxGrid/dhtmlx_grid.css" rel="stylesheet" type="text/css"></link>  
    <link href="/form/dhtmlx/dhtmlxWindows/skins/dhtmlx_window.css" rel="stylesheet" type="text/css"></link>  
    <link href="/form/dhtmlx/dhtmlxMenu/skins/dhtmlxmenu_glassy_blue.css" rel="stylesheet" type="text/css"></link>  
    <script src="/base/base.js" type="text/javascript">
		</script>  
    <script src="/form/form.js" type="text/javascript">
		</script>  
    <script language="javascript" src="/component/data/data.js">
		</script>  
    <style rel="stylesheet" type="text/css">.borderLayout { overflow: hidden; } .xui-borderlayout-root { position: relative; width: 100%; height: 100%; overflow: hidden; } .xui-borderlayout-area { position: absolute; /*overflow: hidden;*/ } .xui-borderlayout-top { top:0; left:0; width:100%; height:100px; } .xui-borderlayout-left { top:100px; left:0; width:100px; height:100px; } .xui-borderlayout-right { top:100px; right:0; width:100px; height:100px; } .xui-borderlayout-bottom { left:0; bottom:0; width:100%; height:100px; } .xui-borderlayout-center { top: 0; left:0; width:100%; height:100%; } .xui-borderlayout-border { position: absolute; background-color: white; } .xui-borderlayout-border-top { top: 95px; left: 0; width: 100%; height: 5px; } .xui-borderlayout-border-left { top: 100px; left: 95px; width: 0; height: 100px; } .xui-borderlayout-border-right { top: 100px; right: 150px; width: 0; height: 100px; } .xui-borderlayout-border-bottom { bottom: 150px; left: 0; width: 100%; height: 0; }</style>  
    <link href="/UI/system/components/buttonBar/buttonBar.css" rel="stylesheet" type="text/css"></link>  
    <style rel="stylesheet" type="text/css"></style>  
    <meta content="ajaxforms" http-equiv="Media-Type"></meta>  
    <meta content="AJAX, Javascript, Web, XForms, XSLTForms, Exemples, Samples" name="keywords"></meta>  
    <link href="/UI/system/icons/system.icon.css" rel="stylesheet" type="text/css"></link>  
    <script>

			onerror = pageErrorHandler;
			function pageErrorHandler(msg, url, line, stack) {
				msg = ('string'==typeof(msg) &amp;&amp; msg)? msg.replace(/Uncaught Error:/,''):'未知错误！';
				var msgs = msg.split("|");
				if(justep.System.showMessage) {
					var msg = msgs.length &gt; 0 ? msgs[0] : "";
					var detail = msgs.length &gt; 1 ? (msgs[1] == "" ? msg : msgs[1]) : msg;
					if(url){detail += ('\n at ('+url); if(line) detail += (':'+line); detail += ')';}
					if(stack) detail += ('\n'+stack);
					(new justep.System.showMessage()).open({"width":600,"msg":msg,"details":detail,"title":"提示"});
					return true;
				} else {
					alert(msgs.length &gt; 0 ? msgs[0] : "未知错误！");
					return false;
				}
			}
			var _closeActivityed = false;
			function _closeActivity_(){
				window._noShowSessionTimeOut_ = true;
				if (!_closeActivityed){
					_closeActivityed = true;
					var log = justep.Context.getRequestParameter("log"); 
					if (log==1 || log=="1"){
						var process = justep.Context.getCurrentProcess();
						var activity = justep.Context.getCurrentActivity();
						var executor = justep.Context.getExecutor();
						if (process!=null &amp;&amp; activity!=null){
							var xmlHttpRequest = justep.Request.sendBizRequest(process, activity, "closeActivityAction", "", null, function(data){}, true, executor);
						}
					}else{
					}
				}
			}
			function _close_(){
				_closeActivity_();				
			}		</script>  
    <link href="/UI/system/config/user.css" rel="stylesheet" type="text/css"></link>  
    <style type="text/css">.custom_button { background: url(../../../ops/images/xforms/button.gif) repeat-x; border: 1px solid #9FB7D3; width: 65px; line-height:18px; }</style>  
    <script type="text/javascript">

			newRecord = false;
			filterData = [];

			function cancelAction() {
				var dialog = xforms("filter_name_edit_dialog");
				if (dialog) {
					dialog.close();
				}
			}

			function generateFilterData() {
				var content = "";
				var len = filterData.length;
				if (len &gt; 0) {
					content = "&lt;root&gt;";
				}
				for (var i = 0; i &lt; len; i++) {
					var filter = filterData[i];

					content += "&lt;pattern&gt;";

					content += "&lt;operator&gt;";
					content += justep.String.HTMLEncode(filter.operator);
					content += "&lt;/operator&gt;";

					content += "&lt;variable&gt;";
					content += justep.String.HTMLEncode(filter.relation);
					content += "&lt;/variable&gt;";

					content += "&lt;constant";
					content += " type=\"" + justep.String.HTMLEncode(filter.relationType) + "\"";
					content += " data1=\"" + justep.String.HTMLEncode(filter.code1) + "\"";
					content += " data2=\"" + justep.String.HTMLEncode(filter.code2) + "\"";
					content += " value=\"" + justep.String.HTMLEncode(filter.value2) + "\"";
					content += "&gt;";
					content += justep.String.HTMLEncode(filter.value1);
					content += "&lt;/constant&gt;";

					content += "&lt;link&gt;";
					content += justep.String.HTMLEncode(filter.link);
					content += "&lt;/link&gt;";

					content += "&lt;/pattern&gt;";
				}
				if (len &gt; 0) {
					content += "&lt;/root&gt;";
				}
				return content;
			}
			function okAction() {
				var data = justep.xbl("main");
				if (newRecord) {
					var rowCount = data.getCount();
					data.newData(rowCount);
				}

				var rowId = newRecord ? data.getRowId(rowCount) : data.getRowId();

				if (newRecord) {
					var currData = window.frameElement.currData;
					var process = currData.getProcess();
					var activity = currData.getActivity();
					var id = currData.id;

					data.setValue("sProcess", process, rowId);
					data.setValue("sActivity", activity, rowId);
					data.setValue("sInstance", id, rowId);
				}

				var nameInput = document.getElementById("filter-pattern-name");
				var name = nameInput.value;
				var content = generateFilterData();

				data.setValue("sName", name, rowId);
				data.setValue("sContent", content, rowId);
				data.saveData();

				var dialog = xforms("filter_name_edit_dialog");
				if (dialog) {
					dialog.close();
				}
				resetButtonState();
			}

			function resetButtonState() {
				var data = justep.xbl("main");
				var rowCount = data.getCount();
				justep.xbl("btn_update").setDisabled(rowCount &lt;= 0);
				justep.xbl("btn_delete").setDisabled(rowCount &lt;= 0);
			}

			function addFilterPattern() {
				var data = window.frameElement.currData;
				data.advanceFilter.clear();
				var filterEditDlg = justep.xbl("filter_edit_dialog");
				filterEditDlg.show(data, processNewFilter);
			}

			function processNewFilter(filters) {
				newRecord = true;
				filterData = filters;
				var nameInput = document.getElementById("filter-pattern-name");
				nameInput.value = "新建过滤模式";
				var dialog = xforms("filter_name_edit_dialog");
				if (dialog) {
					dialog.open();
				}
			}
			function modifyFilterPattern() {
				var conditionData = justep.xbl("main");
				var rowId = conditionData.getRowId();
				var sContent = conditionData.getValue("sContent", rowId);
				var advanceFilter = generateFilterText(sContent);
				var data = window.frameElement.currData;
				data.advanceFilter.setFilter(advanceFilter);
				var filterEditDlg = justep.xbl("filter_edit_dialog");
				filterEditDlg.show(data, processModifyFilter);
			}
			function processModifyFilter(filters) {
				newRecord = false;
				filterData = filters;
				var conditionData = justep.xbl("main");
				var rowId = conditionData.getRowId();
				var sName = conditionData.getValue("sName", rowId);
				var nameInput = document.getElementById("filter-pattern-name");
				nameInput.value = sName;
				var dialog = xforms("filter_name_edit_dialog");
				if (dialog) {
					dialog.open();
				}
			}
			function deleteFilterPattern() {
				var data = justep.xbl("main");
				if (data.deleteData()) {
					data.saveData();
					resetButtonState();
				}
			}
			function closeThisDialog() {
				var dialogId = window.frameElement.dialogId;
				var dialog = parent.xforms(dialogId);
				if (dialog) {
					dialog.close();
				}
			}		</script>  
    <script id="htmlScript1" src="/UI/system/components/bizDataFilterPattern/bizDataFilterPattern.js">
		</script>  
    <script>
new justep.XBizData('main',false,false,{'queryAction':"queryFilterPatternAction",'saveAction':"saveFilterPatternAction",'newAction':"createFilterPatternAction",'dataModel':"/system/data",'concept':"{'SA_FilterPattern':'SA_FilterPattern'}",'limit':9999,'idColumn':"{'name':'SA_FilterPattern','relation':'SA_FilterPattern','define':'SA_FilterPattern','type':'String'}",'directDelete':false,'deleteConfirm':true,'refreshConfirm':true,'updateMode':"whereVersion",'orderBys':"{'sOrderNum':1}",'defRelations':"{'version':{'type':'Integer','relation':'SA_FilterPattern.version','define':'SA_FilterPattern.version','label':'版本'},'sName':{'type':'String','relation':'SA_FilterPattern.sName','define':'SA_FilterPattern.sName','label':'名称'},'sPerson':{'type':'String','relation':'SA_FilterPattern.sPerson','define':'SA_FilterPattern.sPerson','label':'操作员'},'sProcess':{'type':'String','relation':'SA_FilterPattern.sProcess','define':'SA_FilterPattern.sProcess','label':'过程'},'sActivity':{'type':'String','relation':'SA_FilterPattern.sActivity','define':'SA_FilterPattern.sActivity','label':'环节'},'sInstance':{'type':'String','relation':'SA_FilterPattern.sInstance','define':'SA_FilterPattern.sInstance','label':'数据'},'sContent':{'type':'String','relation':'SA_FilterPattern.sContent','define':'SA_FilterPattern.sContent','label':'内容'},'sOrderNum':{'type':'Integer','relation':'SA_FilterPattern.sOrderNum','define':'SA_FilterPattern.sOrderNum','label':'顺序号'}}"},'main_part',{});		</script>  
    <script id="xbl_script" language="javascript">
__initXBL__ = function(){	justep.XBLObject._registerClasses = function() {
justep.XBLObject._classes["/UI/system/components/buttonBar.xbl.xml#buttonBar"] = _xbl_JSClassDefine_buttonBar;
justep.XBLObject._classes["/UI/system/components/window.xbl.xml#window"] = _xbl_JSClassDefine_window;
justep.XBLObject._classes["/UI/system/components/borderLayout.xbl.xml#borderLayout"] = _xbl_JSClassDefine_borderLayout;
justep.XBLObject._classes["/UI/system/components/trigger.xbl.xml#trigger"] = _xbl_JSClassDefine_trigger;
justep.XBLObject._classes["/UI/system/components/bizDataFilterDialog.xbl.xml#bizDataFilterDialog"] = _xbl_JSClassDefine_bizDataFilterDialog;
 };
justep.XBLObject._registerClasses();function _xbl_JSClassDefine_buttonBar(obj) {
 	if (obj) {
 		this.domNode = obj;
  	obj.xblObject = this;
 	}
}
_xbl_JSClassDefine_buttonBar.prototype = justep.Object.extend(new justep.XBLObject(), eval({
				initXBL: function(){
					this.$el = $(this.domNode);
					this.expandable = this.$el.attr('expandable') == 'true';
					if(this.expandable){
						this.expanded = this.$el.attr('expanded') == 'true';
						this.expandedLabel = this.$el.attr('expanded-label');
						this.collapsedLabel = this.$el.attr('collapsed-label');
						this.iconExpanded = this.$el.attr('icon-expanded') || 'icon-system-plus-circle';
						this.iconCollapsed= this.$el.attr('icon-collapsed') || 'icon-system-minus-circle';
						this.btn = justep.xbl(this.domNode.id + '-extend');
						this.expandedItems = $('li.extend ~ li', this.$el); 
					}
				},
				toggle: function(){
					this.expandable &amp;&amp; this.extend(!this.expanded);
				},
				extend: function(value){
					if(this.expandable &amp;&amp; this.expanded != value){
						this.expanded = value;
						this.btn.setLabel(this.expanded? this.collapsedLabel : this.expandedLabel);
						if(this.expanded){
							this.expandedItems.show();
							$('.icon', this.btn.element).removeClass(this.iconExpanded).addClass(this.iconCollapsed);
						}else{
							this.expandedItems.hide();
							$('.icon', this.btn.element).removeClass(this.iconCollapsed).addClass(this.iconExpanded);
						}	
					}
				}
			}));

function _xbl_JSClassDefine_window(obj) {
 	if (obj) {
 		this.domNode = obj;
  	obj.xblObject = this;
 	}
}
_xbl_JSClassDefine_window.prototype = justep.Object.extend(new justep.XBLObject(), eval({}));

function _xbl_JSClassDefine_borderLayout(obj) {
 	if (obj) {
 		this.domNode = obj;
  	obj.xblObject = this;
 	}
}
_xbl_JSClassDefine_borderLayout.prototype = justep.Object.extend(new justep.XBLObject(), eval({

			"initXBL" : function() {
			   	if(!this.domNode.id || this.domNode.id ==""){
					this.domNode.id = (new UUID()).valueOf();
			   	}var baseCls = '.xui-borderlayout-';
			   	var id = this.domNode.id; 
			   	this.el = $("#" + id);
			   	this.rootEl = $("#" + id + " &gt; div");
			   	this.topEl = $("#" + id + " &gt; div &gt; " + baseCls + "top");
			   	this.leftEl = $("#" + id + " &gt; div &gt; " + baseCls + "left");
			   	this.rightEl = $("#" + id + " &gt; div &gt; " + baseCls + "right");
			   	this.bottomEl = $("#" + id + " &gt; div &gt; " + baseCls + "bottom");
			   	this.centerEl = $("#" + id + " &gt; div &gt; " + baseCls + "center");
			   	this.topBorderEl = $("#" + id + " &gt; div &gt; " + baseCls + "border-top");
			   	this.leftBorderEl = $("#" + id + " &gt; div &gt; " + baseCls + "border-left");
			   	this.rightBorderEl = $("#" + id + " &gt; div &gt; " + baseCls + "border-right");
			   	this.bottomBorderEl = $("#" + id + " &gt; div &gt; " + baseCls + "border-bottom");
			   	this.onWindowResize();
			},
			onWindowResize: function(){
				var b = parseFloat(this.rootEl.attr('borderSize')),
					top = left = right = bottom = 0,
					w = this.el.width()-2*b, h = this.el.height()-2*b,
					bp = function(el, isHeight){
						return isHeight? (el.outerHeight()-el.height()): (el.outerWidth()-el.width());
					},
					size = function(el, isHeight){
						var value = el.attr('size');
						if(value!='auto'){
							value = parseFloat(value) - bp(el, isHeight);
						}
						return value;
					},
					area = $(" &gt;.xui-borderlayout-area", this.rootEl);

/*				area.css({overflow:'hidden'});	
				area.css({overflow:'auto'});
*/				
				this.rootEl.height(h);
				this.rootEl.width(w);
				this.rootEl.css({top: b, left:b});					
				if(this.topEl.get(0)){
					this.topEl.css({top: top, left:left});
					this.topEl.height(size(this.topEl, true));
					this.topEl.width(w - bp(this.topEl));
					top = this.topEl.outerHeight();
					if(this.topBorderEl.get(0)){
						this.topBorderEl.css({top: top,left:left});
						top += this.topBorderEl.height();
					} 
				}
				if(this.leftEl.get(0)){
					this.leftEl.css({top: top, left:left});
					this.leftEl.width(size(this.leftEl));
					left = this.leftEl.outerWidth(); 
					if(this.leftBorderEl.get(0)){
						this.leftBorderEl.css({top: top, left: left});
						left += this.leftBorderEl.width(); 
					} 
				}
				if(this.rightEl.get(0)){
					this.rightEl.css({top: top, right:right});
					this.rightEl.width(size(this.rightEl));
					right = this.rightEl.outerWidth(); 
					if(this.rightBorderEl.get(0)){
						this.rightBorderEl.css({top: top,right: right});
						right += this.rightBorderEl.width();
					} 
				}
				if(this.bottomEl.get(0)){
					this.bottomEl.height(size(this.bottomEl, true));
					this.bottomEl.width(w - bp(this.bottomEl));
					bottom = this.bottomEl.outerHeight(); 
					if(this.bottomBorderEl.get(0)){
						this.bottomBorderEl.css({left:0, bottom: bottom});
						bottom += this.bottomBorderEl.height();  
					} 
				}
				this.centerEl.css({top: top, left: left});
				this.centerEl.width(w - left - right - bp(this.centerEl));
				h = h - top - bottom;
				this.leftEl.height(h - bp(this.leftEl, true));  
				this.centerEl.height(h - bp(this.centerEl, true));  
				this.rightEl.height(h - bp(this.rightEl, true));
				this.leftBorderEl.height(h);  
				this.rightBorderEl.height(h);
			}   	
		}));

function _xbl_JSClassDefine_trigger(obj) {
 	if (obj) {
 		this.domNode = obj;
  	obj.xblObject = this;
 	}
}
_xbl_JSClassDefine_trigger.prototype = justep.Object.extend(new justep.XBLObject(), eval({	
			"initXBL" : function() {
				this.$el = $(this.domNode);
				justep.Utils.proxable(this, this.domNode.xformsObject, xforms.XFTrigger);
			},
			"initXBL2" : function() {
				this.domNode.xformsObject.initOperation();
			}
		}));

function _xbl_JSClassDefine_bizDataFilterDialog(obj) {
 	if (obj) {
 		this.domNode = obj;
  	obj.xblObject = this;
 	}
}
_xbl_JSClassDefine_bizDataFilterDialog.prototype = justep.Object.extend(new justep.XBLObject(), eval({
			"initXBL": function() {
				var dialogEl = this.getElementByXblID("filter-dialog");
				this.dialogId = $(dialogEl).firstElement().id;
				var frameEl = this.getElementByXblID("filter-dialog-iframe");
				this.iframeId = frameEl.id;
			},
			"show": function(data, callBack) {
				var filterData = data;
				if (typeof(filterData) == "string") {
					filterData = justep.xbl(filterData);
				}
				if (filterData) {
					if (typeof(filterData.advanceFilter) != "undefined") {
						var dialog = xforms(this.dialogId);
						if(dialog) {
							var frameEl = justep(this.iframeId);
							if (frameEl) {
								frameEl.dialogId = this.dialogId;
								frameEl.filterData = filterData;
								frameEl.callBack = callBack;
								dialog.open();
								return true;
							}
						}
					}
				}
				return false;
			}
		}));

	var ids=[{id:'common_filter_pattern_dialog', name:'/UI/system/components/window.xbl.xml#window', children:[{id:'filter_edit_dialog', name:'/UI/system/components/bizDataFilterDialog.xbl.xml#bizDataFilterDialog', children:[{id:'GLOBAL_ID_N1295146585', name:'xforms:dialog'}]},{id:'filter_name_edit_dialog', name:'xforms:dialog', children:[{id:'b3009385c9ad47e6b588bb325e7b6748', name:'/UI/system/components/borderLayout.xbl.xml#borderLayout', children:[{id:'buttonBar3', name:'/UI/system/components/buttonBar.xbl.xml#buttonBar', children:[{id:'btn_ok', name:'/UI/system/components/trigger.xbl.xml#trigger', children:[{id:'default6', name:'xforms:label'}]},{id:'btn_cancel', name:'/UI/system/components/trigger.xbl.xml#trigger', children:[{id:'default8', name:'xforms:label'}]}]}]}]},{id:'94cd518dbcaf4bb6aca8055b0968789b', name:'/UI/system/components/borderLayout.xbl.xml#borderLayout', children:[{id:'aac606203f804690816c303ea72784e7', name:'xforms:grid'},{id:'buttonBar1', name:'/UI/system/components/buttonBar.xbl.xml#buttonBar', children:[{id:'btn_insert', name:'/UI/system/components/trigger.xbl.xml#trigger', children:[{id:'default1', name:'xforms:label'}]},{id:'btn_update', name:'/UI/system/components/trigger.xbl.xml#trigger', children:[{id:'default2', name:'xforms:label'}]},{id:'btn_delete', name:'/UI/system/components/trigger.xbl.xml#trigger', children:[{id:'default4', name:'xforms:label'}]}]},{id:'buttonBar2', name:'/UI/system/components/buttonBar.xbl.xml#buttonBar', children:[{id:'btn_close', name:'/UI/system/components/trigger.xbl.xml#trigger', children:[{id:'default5', name:'xforms:label'}]}]}]}]}]; 
justep.XBLObject.initXBL(ids);
}; 		</script>  
    <script id="xf_script" type="text/javascript">
xforms.Core.fileName='form.js';	
xf._a(null,'btn_ok');xf._a('btn_ok','default6');xf._a(null,'btn_cancel');xf._a('btn_cancel','default8');xf._a(null,'aac606203f804690816c303ea72784e7');xf._a(null,'btn_insert');xf._a('btn_insert','default1');xf._a(null,'btn_update');xf._a('btn_update','default2');xf._a(null,'btn_delete');xf._a('btn_delete','default4');xf._a(null,'btn_close');xf._a('btn_close','default5');function init() {	
var begin = new Date().getTime();	
xf._b("instance('main')/version",xf._g(xf._f('instance',xf._i("main")),xf._h(false, xf._k("child",xf._j('','version')))));	
xf._b("instance('main')/sOrderNum",xf._g(xf._f('instance',xf._i("main")),xf._h(false, xf._k("child",xf._j('','sOrderNum')))));	
xf._b("sName",xf._h(false, xf._k("child",xf._j('','sName'))));	
xf._b("space-column",xf._h(false, xf._k("child",xf._j('','space-column'))));	
xforms.Schema.registerPrefix('xsd', 'http://www.w3.org/2001/XMLSchema');var xf_model_mainmodel = new xforms.XFModel('mainmodel',null);	
var xf_action_xf_action_0=xf._n(null,null,null,null,false).add(xf._o(null,null,function(element, ctx, event){			var currData = window.frameElement.currData;			var process = currData.getProcess();			var activity = currData.getActivity();			var dataId = currData.id;			var filterText = "((SA_FilterPattern.sProcess='" + process + "') AND (SA_FilterPattern.sActivity='" + activity + "') AND (SA_FilterPattern.sInstance='" + dataId + "') AND (SA_FilterPattern.sPerson=:currentPersonID()))";			var data = justep.xbl("main");			data.filters.setFilter("_default_filter_", filterText);			data.refreshData();			resetButtonState();}));xf._p(justep('mainmodel'),"xforms-model-construct-done",null,function(evt) { xforms.run(xf_action_xf_action_0,'mainmodel', evt,false)});	
new xforms.XFDialog('GLOBAL_ID_N1295146585',"查询对话框",'modal',true,false,true,true,false,null,'490','340',null,null,null,null);	
var xf_action_xf_action_1=xf._n(null,null,null,null,false).add(xf._o(null,null,function(element, ctx, event){var frameEl = justep('GLOBAL_ID_N1945083868');if (frameEl) { if(frameEl.contentWindow.document.body){ frameEl.contentWindow.document.body.innerHTML = "&lt;table width='100%' height='100%'&gt;&lt;tr&gt;&lt;td align='center' style='font-size: 12px'&gt;正在载入页面，请稍候......&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;"; } }justep.Request.callURL("/system/components/bizDataFilterDialog/bizDataFilterDialog.w", "GLOBAL_ID_N1945083868", "");}));xf._p(justep('GLOBAL_ID_N1295146585'),"xforms-dialog-open",null,function(evt) { xforms.run(xf_action_xf_action_1,'GLOBAL_ID_N1295146585', evt,false)});	
new xforms.XFDialog('filter_name_edit_dialog',"过滤模式名称",'modal',true,false,true,true,false,null,'405','130',null,null,null,null);	
var xf_trigger_btn_ok=new xforms.XFTrigger('btn_ok',null,null,null,false,false,false,null,null,null);	
var xf_action_action4=xf._n(null,null,null,null,false).add(xf._o(null,null,function(element, ctx, event){okAction(event)}));xf._p(justep('btn_ok'),"DOMActivate",null,function(evt) { xforms.run(xf_action_action4,'btn_ok', evt,false)});	
var xf_trigger_btn_cancel=new xforms.XFTrigger('btn_cancel',null,null,null,false,false,false,null,null,null);	
var xf_action_xf_action_3=xf._n(null,null,null,null,false).add(xf._o(null,null,function(element, ctx, event){cancelAction(event)}));xf._p(justep('btn_cancel'),"DOMActivate",null,function(evt) { xforms.run(xf_action_xf_action_3,'btn_cancel', evt,false)});	
new xforms.XFGrid({id:'aac606203f804690816c303ea72784e7',instance:'main',systemColumnsPro:'version,sPerson,sProcess,sActivity,sInstance,sContent,sOrderNum',onInit:null,type:'grid',smartRender:null,delay:false,ids:'sName,space-column',headNames:'过滤模式名称,&amp;nbsp;',widths:'*,*',types:'ro,ro',hiddenColumns:'',aligns:',',serverSort:true,sorts:'na,na',fixColumnSize:null,nodeImgCallback:'',multiSelection:'',checkedRef:'',filters:'\u00A0,\u00A0',sysColumns:'',treeColumnReadonly:true,showTreeIndex:null,editMode:null,filterColumn:true,drag:null,beforeDragCallback:null,afterDragCallback:null,afterFillRowCallback:null,beforeIndexChangedCallback:null,afterIndexChangedCallback:null,contextMenuId:null,rightClickSelected:'true',rightClickCallback:null,allowCheckCallback:null,rowHeight:null,hdrRowH:null,hdrFilterH:null,moveColumn:null,rowValueChangedCallback:null,groupColumn:true,adjustColumn:true,saveColumn:true,showHeaderMenu:'',hintCallback:null,cascade:null,hasChildrenCallback1:null,onRowCheck:null,onRowChecked:null,onRowCheckedAll:null,onRowExpand:null,onRowClick:null,onRowDblClick:null,onLastEditorPressEnter:null,initFun:function(){}});	
var xf_trigger_btn_insert=new xforms.XFTrigger('btn_insert',null,null,null,false,false,false,null,null,"icon-system-plus");	
var xf_action_action1=xf._n(null,null,null,null,false).add(xf._o(null,null,function(element, ctx, event){addFilterPattern(event)}));xf._p(justep('btn_insert'),"DOMActivate",null,function(evt) { xforms.run(xf_action_action1,'btn_insert', evt,false)});	
var xf_trigger_btn_update=new xforms.XFTrigger('btn_update',null,null,null,false,false,false,null,null,"icon-system-edit-alt");	
var xf_action_action2=xf._n(null,null,null,null,false).add(xf._o(null,null,function(element, ctx, event){modifyFilterPattern(event)}));xf._p(justep('btn_update'),"DOMActivate",null,function(evt) { xforms.run(xf_action_action2,'btn_update', evt,false)});	
var xf_trigger_btn_delete=new xforms.XFTrigger('btn_delete',null,null,null,false,false,false,null,null,"icon-system-trash");	
var xf_action_action3=xf._n(null,null,null,null,false).add(xf._o(null,null,function(element, ctx, event){deleteFilterPattern(event)}));xf._p(justep('btn_delete'),"DOMActivate",null,function(evt) { xforms.run(xf_action_action3,'btn_delete', evt,false)});	
var xf_trigger_btn_close=new xforms.XFTrigger('btn_close',null,null,null,false,false,false,null,null,null);	
var xf_action_xf_action_7=xf._n(null,null,null,null,false).add(xf._o(null,null,function(element, ctx, event){closeThisDialog(event)}));xf._p(justep('btn_close'),"DOMActivate",null,function(evt) { xforms.run(xf_action_xf_action_7,'btn_close', evt,false)});	
xforms.DebugConsole.writeTime(begin, 'new js objects');	
begin = new Date().getTime();	
xforms.init();	
xforms.DebugConsole.writeTime(begin, 'xforms init');};	
var main_part_loaded = false;	
function load_main_part(callback){if (main_part_loaded) return;main_part_loaded = true;	
new xforms.XFInstance2('main','mainmodel',null,null,null,null,null,null,null,null,null,null,'whereVersion');	
xf._c('xf-bind-0','mainmodel',"instance('main')/version","xsd:integer",null,null,null,null,null,null);	
xf._c('xf-bind-1','mainmodel',"instance('main')/sOrderNum","xsd:integer",null,null,null,null,null,null);	
if(callback)callback();}	
var main_part_init_loaded = false;	
function load_main_part_init(){if (main_part_init_loaded) return;main_part_init_loaded = true;	
if(xforms.ready)justep('mainmodel').xformsObject.construct_part();}	
var __actions__ = {	
};	
		</script> 
  </head>  
  <body class="xui-body" onload="if (window.justep &amp;&amp; justep.XBLObject)justep.XBLObject.init();" style="margin:0; padding:0;height:100%;width:100%;"> 
    <div id="statusPanel"></div>  
    <span id="infoPanel" style="position:absolute;display:none"></span>  
    <div id="visible-element" style="height:100%;width:100%;"> 
      <div class="" style="height: 100%; width: 100%"> 
        <div class="component_3084CC8F bizDataFilterDialog" component="/UI/system/components/bizDataFilterDialog.xbl.xml#bizDataFilterDialog" id="filter_edit_dialog"> 
          <div xblid="filter-dialog"> 
            <div id="GLOBAL_ID_N1295146585" style="display:none"></div>  
            <div style="width:486px;height:315px;position:absolute;left:-9000px;top:-9000px"> 
              <div appearance="full" class="xforms-dialog" close="true" draggable="true" height="340" id="GLOBAL_ID_N1295146585-content" level="modal" style="width:100%;height:100%" title="查询对话框" width="490"> 
                <iframe frameborder="no" id="GLOBAL_ID_N1945083868" name="GLOBAL_ID_N1945083868" src="about:blank" style="width: 100%; height: 100%" xblid="filter-dialog-iframe"></iframe> 
              </div> 
            </div> 
          </div> 
        </div>  
        <div id="filter_name_edit_dialog" style="display:none"></div>  
        <div style="width:401px;height:105px;position:absolute;left:-9000px;top:-9000px"> 
          <div appearance="full" class="xforms-dialog" close="true" draggable="true" height="130" id="filter_name_edit_dialog-content" level="modal" style="width:100%;height:100%" title="过滤模式名称" width="405"> 
            <div border-size="8px" class="component_8F7B2FA1 borderLayout" component="/UI/system/components/borderLayout.xbl.xml#borderLayout" id="b3009385c9ad47e6b588bb325e7b6748" style="width:100%; height:100%;"> 
              <div borderSize="8px" class="xui-borderlayout-root"> 
                <div class="xui-borderlayout-area xui-borderlayout-center" style=""> 
                  <div>请输入名称：</div>  
                  <div style="height:4px;"></div>  
                  <input class="xui-input" id="filter-pattern-name" style="width:380px;" type="text"></input> 
                </div>  
                <div class="xui-borderlayout-area xui-borderlayout-bottom" size="38px" style=""> 
                  <div class="component_CC0FD117 buttonBar" component="/UI/system/components/buttonBar.xbl.xml#buttonBar" id="buttonBar3" style="float:right;"> 
                    <ul> 
                      <li class=""> 
                        <table cellpadding="0" cellspacing="0" class="button-green component_C30EB7C5 trigger xforms-control xforms-trigger xforms-appearance-minimal xui-button" component="/UI/system/components/trigger.xbl.xml#trigger" id="btn_ok" onmouseout="xforms.showMessage(this,false)" onmouseover="xforms.showMessage(this,true)"> 
                          <tbody> 
                            <tr> 
                              <td class="xxf-value"> 
                                <button class="xui-button-label xforms-trigger-image " onmouseout="xforms.Core.setClass(this,'xforms-trigger-over')" onmouseover="xforms.Core.setClass(this,'xforms-trigger-over',true)" tabindex="" type="button"> 
                                  <i class="icon "></i>  
                                  <span class="xforms-label " id="default6">确定</span> 
                                </button> 
                              </td>  
                              <td class="xxf-alert"> 
                                <span class="xforms-alert"> 
                                  <span class="xforms-alert-icon" onmouseout="show(this, null, false)" onmouseover="show(this, null, true)"></span>  
                                  <div class="xforms-alert-value" id=""></div> 
                                </span> 
                              </td> 
                            </tr> 
                          </tbody> 
                        </table> 
                      </li>  
                      <li class="space nosep" style="margin: 0 8px;">|</li>  
                      <li class="last"> 
                        <table cellpadding="0" cellspacing="0" class="component_C30EB7C5 trigger xforms-control xforms-trigger xforms-appearance-minimal xui-button" component="/UI/system/components/trigger.xbl.xml#trigger" id="btn_cancel" onmouseout="xforms.showMessage(this,false)" onmouseover="xforms.showMessage(this,true)"> 
                          <tbody> 
                            <tr> 
                              <td class="xxf-value"> 
                                <a class="xui-button-label" tabindex=""> 
                                  <i class="icon "></i>  
                                  <span class="xforms-label " id="default8">取消</span> 
                                </a> 
                              </td>  
                              <td class="xxf-alert"> 
                                <span class="xforms-alert"> 
                                  <span class="xforms-alert-icon" onmouseout="show(this, null, false)" onmouseover="show(this, null, true)"></span>  
                                  <div class="xforms-alert-value" id=""></div> 
                                </span> 
                              </td> 
                            </tr> 
                          </tbody> 
                        </table> 
                      </li> 
                    </ul> 
                  </div> 
                </div>  
                <div class="xui-borderlayout-border xui-borderlayout-border-bottom" style="height:0"></div> 
              </div> 
            </div> 
          </div> 
        </div>  
        <div border-size="8px" class="component_8F7B2FA1 borderLayout" component="/UI/system/components/borderLayout.xbl.xml#borderLayout" id="94cd518dbcaf4bb6aca8055b0968789b" style="width:100%; height:100%;"> 
          <div borderSize="8px" class="xui-borderlayout-root"> 
            <div class="xui-borderlayout-area xui-borderlayout-center" style="border-top: 1px solid #DDD"> 
              <div class="xui-grid-hide-head grid-compact  component_6298A7A1 grid" data="main" id="aac606203f804690816c303ea72784e7" right-click-selected="true" style="width:100%;height:100%;border:0px solid #9FB7D3;;overflow:hidden" system-columns="version,sPerson,sProcess,sActivity,sInstance,sContent,sOrderNum"></div> 
            </div>  
            <div class="xui-borderlayout-area xui-borderlayout-top" size="30px" style=""> 
              <div class="component_CC0FD117 buttonBar" component="/UI/system/components/buttonBar.xbl.xml#buttonBar" id="buttonBar1"> 
                <ul> 
                  <li class=""> 
                    <table cellpadding="0" cellspacing="0" class="button-blue component_C30EB7C5 trigger xforms-control xforms-trigger xforms-appearance-minimal xui-button" component="/UI/system/components/trigger.xbl.xml#trigger" id="btn_insert" onmouseout="xforms.showMessage(this,false)" onmouseover="xforms.showMessage(this,true)"> 
                      <tbody> 
                        <tr> 
                          <td class="xxf-value"> 
                            <button class="xui-button-label xforms-trigger-image " onmouseout="xforms.Core.setClass(this,'xforms-trigger-over')" onmouseover="xforms.Core.setClass(this,'xforms-trigger-over',true)" tabindex="" type="button"> 
                              <i class="icon icon-system-plus"></i>  
                              <span class="xforms-label " id="default1">新建</span> 
                            </button> 
                          </td>  
                          <td class="xxf-alert"> 
                            <span class="xforms-alert"> 
                              <span class="xforms-alert-icon" onmouseout="show(this, null, false)" onmouseover="show(this, null, true)"></span>  
                              <div class="xforms-alert-value" id=""></div> 
                            </span> 
                          </td> 
                        </tr> 
                      </tbody> 
                    </table> 
                  </li>  
                  <li class="space nosep" style="margin: 0 8px;">|</li>  
                  <li class=""> 
                    <table cellpadding="0" cellspacing="0" class="component_C30EB7C5 trigger xforms-control xforms-trigger xforms-appearance-minimal xui-button" component="/UI/system/components/trigger.xbl.xml#trigger" id="btn_update" onmouseout="xforms.showMessage(this,false)" onmouseover="xforms.showMessage(this,true)"> 
                      <tbody> 
                        <tr> 
                          <td class="xxf-value"> 
                            <a class="xui-button-label" tabindex=""> 
                              <i class="icon icon-system-edit-alt"></i>  
                              <span class="xforms-label " id="default2">修改</span> 
                            </a> 
                          </td>  
                          <td class="xxf-alert"> 
                            <span class="xforms-alert"> 
                              <span class="xforms-alert-icon" onmouseout="show(this, null, false)" onmouseover="show(this, null, true)"></span>  
                              <div class="xforms-alert-value" id=""></div> 
                            </span> 
                          </td> 
                        </tr> 
                      </tbody> 
                    </table> 
                  </li>  
                  <li class="space nosep" style="margin: 0 8px;">|</li>  
                  <li class="last"> 
                    <table cellpadding="0" cellspacing="0" class="component_C30EB7C5 trigger xforms-control xforms-trigger xforms-appearance-minimal xui-button" component="/UI/system/components/trigger.xbl.xml#trigger" id="btn_delete" onmouseout="xforms.showMessage(this,false)" onmouseover="xforms.showMessage(this,true)"> 
                      <tbody> 
                        <tr> 
                          <td class="xxf-value"> 
                            <a class="xui-button-label" tabindex=""> 
                              <i class="icon icon-system-trash"></i>  
                              <span class="xforms-label " id="default4">删除</span> 
                            </a> 
                          </td>  
                          <td class="xxf-alert"> 
                            <span class="xforms-alert"> 
                              <span class="xforms-alert-icon" onmouseout="show(this, null, false)" onmouseover="show(this, null, true)"></span>  
                              <div class="xforms-alert-value" id=""></div> 
                            </span> 
                          </td> 
                        </tr> 
                      </tbody> 
                    </table> 
                  </li> 
                </ul> 
              </div> 
            </div>  
            <div class="xui-borderlayout-border xui-borderlayout-border-top" style="height:0"></div>  
            <div class="xui-borderlayout-area xui-borderlayout-bottom" size="38px" style=""> 
              <div class="component_CC0FD117 buttonBar" component="/UI/system/components/buttonBar.xbl.xml#buttonBar" id="buttonBar2" style="float:right;"> 
                <ul> 
                  <li class="last"> 
                    <table cellpadding="0" cellspacing="0" class="button-green component_C30EB7C5 trigger xforms-control xforms-trigger xforms-appearance-minimal xui-button" component="/UI/system/components/trigger.xbl.xml#trigger" id="btn_close" onmouseout="xforms.showMessage(this,false)" onmouseover="xforms.showMessage(this,true)"> 
                      <tbody> 
                        <tr> 
                          <td class="xxf-value"> 
                            <button class="xui-button-label xforms-trigger-image " onmouseout="xforms.Core.setClass(this,'xforms-trigger-over')" onmouseover="xforms.Core.setClass(this,'xforms-trigger-over',true)" tabindex="" type="button"> 
                              <i class="icon "></i>  
                              <span class="xforms-label " id="default5">关闭</span> 
                            </button> 
                          </td>  
                          <td class="xxf-alert"> 
                            <span class="xforms-alert"> 
                              <span class="xforms-alert-icon" onmouseout="show(this, null, false)" onmouseover="show(this, null, true)"></span>  
                              <div class="xforms-alert-value" id=""></div> 
                            </span> 
                          </td> 
                        </tr> 
                      </tbody> 
                    </table> 
                  </li> 
                </ul> 
              </div> 
            </div>  
            <div class="xui-borderlayout-border xui-borderlayout-border-bottom" style="height:0"></div> 
          </div> 
        </div> 
      </div> 
    </div>  
    <script type="text/javascript">
if (typeof(xforms.Dialog) != "undefined") { xforms.Dialog.show('statusPanel'); }		</script> 
  </body> 
</html>
