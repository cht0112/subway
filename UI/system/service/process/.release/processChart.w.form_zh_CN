<?xml version="1.0" encoding="UTF-8"?>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:ajx="http://www.ajaxforms.net/2006/ajx" xmlns:o="urn:schemas-microsoft-com:office:office" xmlns:v="urn:schemas-microsoft-com:vml" style="height:100%;width:100%;" version="2.0">  
  <head> 
    <link href="/form/xforms/xforms.css" rel="stylesheet" type="text/css"></link>  
    <link href="/form/justep/calendar.css" rel="stylesheet" type="text/css"></link>  
    <link href="/form/justep/showMessage.css" rel="stylesheet" type="text/css"></link>  
    <link href="/form/dhtmlx/dhtmlxGrid/dhtmlx_grid.css" rel="stylesheet" type="text/css"></link>  
    <link href="/form/dhtmlx/dhtmlxWindows/skins/dhtmlx_window.css" rel="stylesheet" type="text/css"></link>  
    <link href="/form/dhtmlx/dhtmlxMenu/skins/dhtmlxmenu_glassy_blue.css" rel="stylesheet" type="text/css"></link>  
    <script src="/base/base.js" type="text/javascript">
</script>      <script src="/base/base.res.js" type="text/javascript">
</script>      <script src="/form/form.res.js" type="text/javascript">
</script>      <script src="/form/form.js" type="text/javascript">
</script>      <script language="javascript" src="/UI/system/resources/system.res.js">
</script>      <script language="javascript" src="/UI/system/components/tabs/tabs.js">
</script>      <link href="/UI/system/components/./tabs/tabs.css" rel="stylesheet" type="text/css"></link>      <style rel="stylesheet" type="text/css">ul.tabItems button:disabled { background-color:#EEEEEE; }</style>  
    <script language="javascript" src="/UI/system/components/processChart/js/processChart.js">
</script>      <style rel="stylesheet" type="text/css">.borderLayout { overflow: hidden; } .xui-borderlayout-root { position: relative; width: 100%; height: 100%; overflow: hidden; } .xui-borderlayout-area { position: absolute; /*overflow: hidden;*/ } .xui-borderlayout-top { top:0; left:0; width:100%; height:100px; } .xui-borderlayout-left { top:100px; left:0; width:100px; height:100px; } .xui-borderlayout-right { top:100px; right:0; width:100px; height:100px; } .xui-borderlayout-bottom { left:0; bottom:0; width:100%; height:100px; } .xui-borderlayout-center { top: 0; left:0; width:100%; height:100%; } .xui-borderlayout-border { position: absolute; background-color: white; } .xui-borderlayout-border-top { top: 95px; left: 0; width: 100%; height: 5px; } .xui-borderlayout-border-left { top: 100px; left: 95px; width: 0; height: 100px; } .xui-borderlayout-border-right { top: 100px; right: 150px; width: 0; height: 100px; } .xui-borderlayout-border-bottom { bottom: 150px; left: 0; width: 100%; height: 0; }</style>  
    <meta content="ajaxforms" http-equiv="Media-Type"></meta>  
    <meta content="AJAX, Javascript, Web, XForms, XSLTForms, Exemples, Samples" name="keywords"></meta>  
    <link href="/UI/system/icons/system.icon.css" rel="stylesheet" type="text/css"></link>  
    <script>

			onerror = pageErrorHandler;
			function pageErrorHandler(msg, url, line, stack) {
				msg = ('string'==typeof(msg) &amp;&amp; msg)? msg.replace(/Uncaught Error:/,''):'未知错误';
				msg = ('string'==typeof(msg) &amp;&amp; msg)? msg.replace(/Error:/,''):'未知错误';
				msg = justep.String.trim(msg);
				if (msg.substring(0,1) == "{"){
					/*认为是json格式的数据*/
					var msgs = JSON.parse(msg);
					var code = msgs.code;
					var message = msgs.message;
					var reason = msgs.reason;
					var messages = msgs.messages;
					var javaStack = msgs.stack;
					var javaUrl = msgs.url;
					var javaParam = msgs.param;
					if (code!=null &amp;&amp; code!=undefined &amp;&amp; code!=""){
						message = code + ", " + message;
					}
					var detail = "";
					if (javaStack){
						detail += javaStack; 
					} 
					if (javaUrl){
						detail += '\n\r url:' + javaUrl;
						if (javaParam){
							detail += '\n\r param:' + javaParam;
						}
					}
					if(url){
						detail += ('\n at ('+url); 
						if(line) detail += (':'+line); 
						detail += ')';
					}
					if(stack) detail += stack;	
					(new justep.System.showMessage()).open({"width":600,"msg":message,"details":detail,"title":"提示", "reason": reason, "messages": messages});
					return true;
				}else{
					var msgs = msg.split("|");
					if(justep.System.showMessage) {
						var msg = msgs.length &gt; 0 ? msgs[0] : "";
						var detail = msgs.length &gt; 1 ? (msgs[1] == "" ? msg : msgs[1]) : msg;
						if(url){detail += ('\n at ('+url); if(line) detail += (':'+line); detail += ')';}
						if(stack) detail += ('\n'+stack);
						(new justep.System.showMessage()).open({"width":600,"msg":msg,"details":detail,"title":"提示"});
						return true;
					} else {
						alert(msgs.length &gt; 0 ? msgs[0] : "未知错误");
						return false;
					}
				}
				var msgs = msg.split("|");
				if(justep.System.showMessage) {
					var tip = "";
					var reason = "";
					var others = "";
					var messages = "";
					if (msgs.length == 1){
						tip = msgs[0];
						reason = "";
						messages = "";
						others = "";					
					}else if (msgs.length == 2){
						tip = msgs[0];
						reason = "未知";
						messages = "";
						others = msgs[1];
					}else if (msgs.length == 3){
						tip = msgs[0];
						reason = msgs[1];
						messages = "";
						others = msgs[2];
					}else if (msgs.length == 3){
						tip = msgs[0];
						reason = msgs[1];
						messages = msgs[2];
						others = msgs[3];
					}else {
						tip = msgs[0];
						reason = msgs[1];
						messages = msgs[2];
						others = msgs[3];
					}
					if(url){
						others += ('\n at ('+url); 
						if(line) others += (':'+line); 
						others += ')';
					}
					if(stack){ 
						others += ('\n'+stack);
					}	
					(new justep.System.showMessage()).open({"width":600,"msg":tip,"details":others,"title":"提示","reason":reason,"messages":messages});
					return true;
				} else {
					alert(msgs.length &gt; 0 ? msgs[0] : "未知错误");
					return false;
				}
			}
			var _closeActivityed = false;
			function _closeActivity_(){
				window._noShowSessionTimeOut_ = true;
				if (!_closeActivityed){					_closeActivityed = true;
					var log = justep.Context.getRequestParameter("log"); 
					if (log==1 || log=="1"){
						var process = justep.Context.getCurrentProcess();
						var activity = justep.Context.getCurrentActivity();
						var executor = justep.Context.getExecutor();
						if (process!=null &amp;&amp; activity!=null){
							var xmlHttpRequest = justep.Request.sendBizRequest(process, activity, "closeActivityAction", "", null, function(data){}, true, executor);
						}
					}else{
					}
				}
			}
			function _close_(){
				_closeActivity_();				
			}</script>  
    <link href="/UI/system/config/user.css" rel="stylesheet" type="text/css"></link>  
    <script id="htmlScript1" src="/UI/system/service/process/processChart.js">
</script>      <script id="xbl_script" language="javascript">
__initXBL__ = function(){	justep.XBLObject._registerClasses = function() {
justep.XBLObject._classes["/UI/system/components/window.xbl.xml#window"] = _xbl_JSClassDefine_window;
justep.XBLObject._classes["/UI/system/components/tabs.xbl.xml#tabs"] = _xbl_JSClassDefine_tabs;
justep.XBLObject._classes["/UI/system/components/processChart.xbl.xml#processTrackChart"] = _xbl_JSClassDefine_processTrackChart;
justep.XBLObject._classes["/UI/system/components/borderLayout.xbl.xml#borderLayout"] = _xbl_JSClassDefine_borderLayout;
justep.XBLObject._classes["/UI/system/components/processChart.xbl.xml#processPertChart"] = _xbl_JSClassDefine_processPertChart;
 };
justep.XBLObject._registerClasses();function _xbl_JSClassDefine_window(obj) {
 	if (obj) {
 		this.domNode = obj;
  	obj.xblObject = this;
 	}
}
_xbl_JSClassDefine_window.prototype = justep.Object.extend(new justep.XBLObject(), eval({}));

_xbl_JSClassDefine_window.prototype.ClassName='_xbl_JSClassDefine_window';
_xbl_JSClassDefine_window.prototype.__code__=_j_xbl_b__xbl_JSClassDefine_window_j_xbl_e_;
function _xbl_JSClassDefine_tabs(obj) {
 	if (obj) {
 		this.domNode = obj;
  	obj.xblObject = this;
 	}
}
_xbl_JSClassDefine_tabs.prototype = justep.Object.extend(new justep.XBLObject(), eval({
			"initXBL" : function() {
				this.tabbar = new justep.JSTabbar(this.domNode.id);
				justep.Utils.proxable(this, this.tabbar, justep.JSTabbar);
			}
		}));

_xbl_JSClassDefine_tabs.prototype.ClassName='_xbl_JSClassDefine_tabs';
_xbl_JSClassDefine_tabs.prototype.__code__=_j_xbl_b__xbl_JSClassDefine_tabs_j_xbl_e_;
function _xbl_JSClassDefine_processTrackChart(obj) {
 	if (obj) {
 		this.domNode = obj;
  	obj.xblObject = this;
 	}
}
_xbl_JSClassDefine_processTrackChart.prototype = justep.Object.extend(new justep.XBLObject(), eval({
				"_task" : null,
				"_p" : null,
				"_pi" : null,
				"_bizData" : null,
				"load" : function(){
					var task = justep.Context.getTask();
					if (task != null){
						this.loadByTask(task);
					}else{
						var process = justep.Context.getCurrentProcess();
						this.loadByData(process, null);
					}
				},
				"loadByTask" : function(task){
					if (task != this._task){
						this._task = task;
						this.__load(null, null, null, task);
					}
				},
				"loadByPI" : function(pi){
					if (pi != this._pi){
						this._pi = pi;
						this.__load(null, null, pi, null);
					}
				},
				"loadByData" : function(p, bizData){
					if ((p != this._p) || (bizData != this._bizData)){
						this._p = p;
						this._bizData = bizData;
						this.__load(bizData, p, null, null);
					}
				},
				"__load": function(bizData, p, pi, task) {
					var ext = this.domNode.getAttribute('ext');
					var processChartData = createActionStringAndExecuteActionGetFlowTrack(bizData, p, pi, task, ext);
					this.__loadByChartData(processChartData);
				},
				"__loadByChartData": function(chartData) {
					var interface = this.getElementByXblID("interface");
					var onClick = this.domNode.getAttribute('onTrackItemClick');
					if (onClick &amp;&amp; (onClick!='')){
						onClick = justep.Function.get(onClick);
					}
					__wfLoadTrack(interface.getAttribute('chartControlID'), chartData, onClick);
				},
				"getSelectedActivities" : function(){
					var ret = [];
					var interface = this.getElementByXblID("interface");
					var canvas = JustepFlowTrack[interface.getAttribute('chartControlID')];
					var selections = canvas.selections;
					for(var id in selections){
						if((selections[id].type!='Connection')&amp;&amp;(typeof selections[id].type!='undefined')){
							var activity = canvas.modelData.processMainData[id];
							ret.push(activity);
						}
					}
					return ret;
				},
				"getTrackCanvas" : function(){
					var ret = [];
					var interface = this.getElementByXblID("interface");
					var canvas = JustepFlowTrack[interface.getAttribute('chartControlID')];
					return canvas;
				}
			}));

_xbl_JSClassDefine_processTrackChart.prototype.ClassName='_xbl_JSClassDefine_processTrackChart';
_xbl_JSClassDefine_processTrackChart.prototype.__code__=_j_xbl_b__xbl_JSClassDefine_processTrackChart_j_xbl_e_;
function _xbl_JSClassDefine_borderLayout(obj) {
 	if (obj) {
 		this.domNode = obj;
  	obj.xblObject = this;
 	}
}
_xbl_JSClassDefine_borderLayout.prototype = justep.Object.extend(new justep.XBLObject(), eval({

			"initXBL" : function() {
			   	if(!this.domNode.id || this.domNode.id ==""){
					this.domNode.id = (new UUID()).valueOf();
			   	}
			   	var baseCls = '.xui-borderlayout-';
			   	var id = this.domNode.id; 
			   	this.el = $("#" + id);
			   	this.rootEl = $("#" + id + " &gt; div");
			   	this.topEl = $("#" + id + " &gt; div &gt; " + baseCls + "top");
			   	this.leftEl = $("#" + id + " &gt; div &gt; " + baseCls + "left");
			   	this.rightEl = $("#" + id + " &gt; div &gt; " + baseCls + "right");
			   	this.bottomEl = $("#" + id + " &gt; div &gt; " + baseCls + "bottom");
			   	this.centerEl = $("#" + id + " &gt; div &gt; " + baseCls + "center");	   	this.topBorderEl = $("#" + id + " &gt; div &gt; " + baseCls + "border-top");
			   	this.leftBorderEl = $("#" + id + " &gt; div &gt; " + baseCls + "border-left");
			   	this.rightBorderEl = $("#" + id + " &gt; div &gt; " + baseCls + "border-right");
			   	this.bottomBorderEl = $("#" + id + " &gt; div &gt; " + baseCls + "border-bottom");
			   	this.onWindowResize();
			},
			onWindowResize: function(){
				var b = parseFloat(this.rootEl.attr('borderSize')),
					top = left = right = bottom = 0,
					w = this.el.width()-2*b, h = this.el.height()-2*b,
					bp = function(el, isHeight){
						return isHeight? (el.outerHeight()-el.height()): (el.outerWidth()-el.width());
					},
					size = function(el, isHeight){
						var value = el.attr('size');
						if(value!='auto'){
							value = parseFloat(value) - bp(el, isHeight);
						}
						return value;
					},
					area = $(" &gt;.xui-borderlayout-area", this.rootEl);

/*				area.css({overflow:'hidden'});	
				area.css({overflow:'auto'});
*/				
				this.rootEl.height(h);
				this.rootEl.width(w);
				this.rootEl.css({top: b, left:b});					
				if(this.topEl.get(0)){
					this.topEl.css({top: top, left:left});
					this.topEl.height(size(this.topEl, true));
					this.topEl.width(w - bp(this.topEl));
					top = this.topEl.outerHeight();
					if(this.topBorderEl.get(0)){
						this.topBorderEl.css({top: top,left:left});
						top += this.topBorderEl.height();
					} 
				}
				if(this.leftEl.get(0)){
					this.leftEl.css({top: top, left:left});
					this.leftEl.width(size(this.leftEl));
					left = this.leftEl.outerWidth(); 
					if(this.leftBorderEl.get(0)){
						this.leftBorderEl.css({top: top, left: left});
						left += this.leftBorderEl.width(); 
					} 
				}
				if(this.rightEl.get(0)){
					this.rightEl.css({top: top, right:right});
					this.rightEl.width(size(this.rightEl));
					right = this.rightEl.outerWidth(); 
					if(this.rightBorderEl.get(0)){
						this.rightBorderEl.css({top: top,right: right});
						right += this.rightBorderEl.width();
					} 
				}if(this.bottomEl.get(0)){
					this.bottomEl.height(size(this.bottomEl, true));
					this.bottomEl.width(w - bp(this.bottomEl));
					bottom = this.bottomEl.outerHeight(); 
					if(this.bottomBorderEl.get(0)){
						this.bottomBorderEl.css({left:0, bottom: bottom});
						bottom += this.bottomBorderEl.height();  
					} 
				}
				this.centerEl.css({top: top, left: left});
				this.centerEl.width(w - left - right - bp(this.centerEl));
				h = h - top - bottom;
				this.leftEl.height(h - bp(this.leftEl, true));  
				this.centerEl.height(h - bp(this.centerEl, true));  
				this.rightEl.height(h - bp(this.rightEl, true));
				this.leftBorderEl.height(h);  
				this.rightBorderEl.height(h);
			}   	
		}));

_xbl_JSClassDefine_borderLayout.prototype.ClassName='_xbl_JSClassDefine_borderLayout';
_xbl_JSClassDefine_borderLayout.prototype.__code__=_j_xbl_b__xbl_JSClassDefine_borderLayout_j_xbl_e_;
function _xbl_JSClassDefine_processPertChart(obj) {
 	if (obj) {
 		this.domNode = obj;
  	obj.xblObject = this;
 	}
}
_xbl_JSClassDefine_processPertChart.prototype = justep.Object.extend(new justep.XBLObject(), eval({
				"_task" : null,
				"_p" : null,
				"_pi" : null,
				"_bizData" : null,
				"load" : function(){
					var task = justep.Context.getTask();
					if (task != null){
						this.loadByTask(task);
					}else{
						var process = justep.Context.getCurrentProcess();
						this.loadByData(process, null);
					}
				},
				"loadByTask" : function(task){
					if (task != this._task){
						this._task = task;
						this.__load(null, null, null, task);
					}
				},
				"loadByPI" : function(pi){
					if (pi != this._pi){
						this._pi = pi;
						this.__load(null, null, pi, null);
					}
				},
				"loadByData" : function(p, bizData){
					if ((p != this._p) || (bizData != this._bizData)){
						this._p = p;
						this._bizData = bizData;
						this.__load(bizData, p, null, null);
					}
				},
				"__load": function(bizData, p, pi, task) {
					var ext = this.domNode.getAttribute('ext');
					var processChartData = createActionStringAndExecuteActionGetFlowTrack(bizData, p, pi, task, ext);
					this.__loadByChartData(processChartData);
				},
				"__loadByChartData": function(chartData) {
					var interface = this.getElementByXblID("interface");
					var onClick = this.domNode.getAttribute('onPertItemClick');
					if (onClick &amp;&amp; (onClick!='')){
						onClick = justep.Function.get(onClick);
					}
					__wfLoadBot(interface.getAttribute('chartControlID'), chartData, onClick);
				}
			}));

_xbl_JSClassDefine_processPertChart.prototype.ClassName='_xbl_JSClassDefine_processPertChart';
_xbl_JSClassDefine_processPertChart.prototype.__code__=_j_xbl_b__xbl_JSClassDefine_processPertChart_j_xbl_e_;
	var ids=[{id:'ea0550abbb514f0b8b41fc436a20db74', name:'/UI/system/components/window.xbl.xml#window', children:[{id:'GLOBAL_ID_1627837018', name:'/UI/system/components/tabs.xbl.xml#tabs', children:[{id:'track', name:'/UI/system/components/processChart.xbl.xml#processTrackChart', children:[{id:'bl2', name:'/UI/system/components/borderLayout.xbl.xml#borderLayout'}]},{id:'pert', name:'/UI/system/components/processChart.xbl.xml#processPertChart'}]}]}]; 
justep.XBLObject.initXBL(ids);
}; 
justep.XBLObject.code='_xbl_code_';</script>  
    <script id="xf_script" type="text/javascript">
xforms.Core.fileName='form.js';	
function init() {	
var begin = new Date().getTime();	
var xf_model_model1 = new xforms.XFModel('model1',null);	
var xf_action_action1=xf._n(null,null,null,null,false).add(xf._o(null,null,function(element, ctx, event){processChart.model1Load(event)}));xf._p(justep('model1'),"onload",null,function(evt) { xforms.run(xf_action_action1,'model1', evt,false)});	
xforms.load_parts('rootView');	
xforms.DebugConsole.writeTime(begin, 'new js objects');	
begin = new Date().getTime();	
xforms.init();	
xforms.DebugConsole.writeTime(begin, 'xforms init');};	
function load_rootView(){if (justep("rootView").getAttribute('loaded') &amp;&amp; justep("rootView").getAttribute('loaded') == 'true') return;justep("rootView").setAttribute('loaded', 'true');	
if(typeof(load_rootView_html) == 'function')load_rootView_html();	
}	
function load_rootView_xblinit(){if (justep("rootView").getAttribute('xblloaded') &amp;&amp; justep("rootView").getAttribute('xblloaded') == 'true') return;justep("rootView").setAttribute('xblloaded', 'true');	
}	
var __actions__ = {	
};	
</script>   </head>    <body class="xui-body" onload="if (window.justep &amp;&amp; justep.XBLObject)justep.XBLObject.init();" style="margin:0; padding:0;height:100%;width:100%;">     <div id="statusPanel"></div>      <span id="infoPanel" style="position:absolute;display:none"></span>      <div id="visible-element" style="height:100%;width:100%;">       <div class="" id="rootView" lazy="false" style="height:100%;width:100%">         <div class="component_478DC2A1 tabs" component="/UI/system/components/tabs.xbl.xml#tabs" id="GLOBAL_ID_1627837018" style="width:100%;height:100%;overflow:auto;">           <div class="jstabbar" id="GLOBAL_ID_1627837018_root">             <ul class="tabItems clearfix">               <li class="selected" id="GLOBAL_ID_1455152767_tab">                 <button class="selected" onclick="this.parentNode.parentNode.parentNode.parentNode.tabbar.setTabActive('GLOBAL_ID_1455152767');this.blur();" type="button">轨迹图</button> 
              </li>  
              <li id="GLOBAL_ID_78611174_tab"> 
                <button onclick="this.parentNode.parentNode.parentNode.parentNode.tabbar.setTabActive('GLOBAL_ID_78611174');this.blur();" type="button">波特图</button> 
              </li> 
            </ul>  
            <div class="contents" id="GLOBAL_ID_1627837018_contents"> 
              <div class="content selected" id="GLOBAL_ID_1455152767"> 
                <div class="component_8CF08DD0 processTrackChart" component="/UI/system/components/processChart.xbl.xml#processTrackChart" id="track" style="height:100%;"> 
                  <div style="display:none"> 
                    <div chartControlID="track_GLOBAL_ID_1378423956" xblid="interface"></div> 
                  </div>  
                  <div class="component_8F7B2FA1 borderLayout" component="/UI/system/components/borderLayout.xbl.xml#borderLayout" id="bl2" style="height:100%;"> 
                    <div borderSize="0" class="xui-borderlayout-root"> 
                      <div class="xui-borderlayout-area xui-borderlayout-top" size="40px" style=""> 
                        <table> 
                          <tr> 
                            <td width="30"> 
                              <div style="overflow:hidden;display:block;background:green; width:100%;height:2px"></div> 
                            </td>  
                            <td align=""> 
                              <span>已经过</span> 
                            </td>  
                            <td width="20"></td>  
                            <td width="30"> 
                              <div style="overflow:hidden;display:block;background:black; width:100%;height:2px"></div> 
                            </td>  
                            <td> 
                              <span>未经过</span> 
                            </td>  
                            <td width="20"></td>  
                            <td width="30"> 
                              <div style="overflow:hidden;display:block;background:red; width:100%;height:2px"></div> 
                            </td>  
                            <td> 
                              <span>回退</span> 
                            </td>  
                            <td width="20"></td>  
                            <td width="30"> 
                              <div style="overflow:hidden;display:block;background:#0080FF; border:1px #0080FF solid; width:100%;height:20px;border-style:solid;"></div> 
                            </td>  
                            <td> 
                              <span>当前环节</span> 
                            </td>  
                            <td width="20"></td>  
                            <td width="30"> 
                              <div style="overflow:hidden;display:block;background:green; border:1px green solid; width:100%;height:20px; border-style:solid;"></div> 
                            </td>  
                            <td> 
                              <span>已处理</span> 
                            </td>  
                            <td width="20"></td>  
                            <td width="30"> 
                              <div style="overflow:hidden;display:block;background:#ff6666; border:1px #ff6666 solid; width:100%;height:20px;border-style:solid;"></div> 
                            </td>  
                            <td> 
                              <span>已终止</span> 
                            </td>  
                            <td width="20"></td>  
                            <td width="30"> 
                              <div style="overflow:hidden;display:block;background:yellow; border:1px yellow solid; width:100%;height:20px;border-style:solid;"></div> 
                            </td>  
                            <td> 
                              <span>已暂停</span> 
                            </td> 
                          </tr> 
                        </table> 
                      </div>  
                      <div class="xui-borderlayout-border xui-borderlayout-border-top" style="height:0"></div>  
                      <div class="xui-borderlayout-area xui-borderlayout-center" style="overflow:auto;"> 
                        <div id="track_GLOBAL_ID_1378423956" style="width:100%;height:100%;overflow:auto;"></div> 
                      </div> 
                    </div> 
                  </div> 
                </div> 
              </div>  
              <div class="content" id="GLOBAL_ID_78611174" xforms-select="processChart.tabPage1Select"> 
                <div class="component_4502B30A processPertChart" component="/UI/system/components/processChart.xbl.xml#processPertChart" id="pert" style="height:100%;"> 
                  <div style="display:none"> 
                    <div chartControlID="bot_GLOBAL_ID_N1604236172" xblid="interface"></div> 
                  </div>  
                  <div id="bot_GLOBAL_ID_N1604236172" style="width:100%;height:100%;overflow:auto;"></div> 
                </div> 
              </div> 
            </div> 
          </div> 
        </div> 
      </div> 
    </div>  
    <script type="text/javascript">
if (typeof(xforms.Dialog) != "undefined") { xforms.Dialog.show('statusPanel'); }</script> 
  </body> 
</html>
