<?xml version="1.0" encoding="UTF-8"?>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:ajx="http://www.ajaxforms.net/2006/ajx" xmlns:o="urn:schemas-microsoft-com:office:office" xmlns:v="urn:schemas-microsoft-com:vml" style="height:100%;width:100%;" version="2.0">  
  <head> 
    <link href="/form/xforms/xforms.css" rel="stylesheet" type="text/css"></link>  
    <link href="/form/justep/calendar.css" rel="stylesheet" type="text/css"></link>  
    <link href="/form/justep/showMessage.css" rel="stylesheet" type="text/css"></link>  
    <link href="/form/dhtmlx/dhtmlxGrid/dhtmlx_grid.css" rel="stylesheet" type="text/css"></link>  
    <link href="/form/dhtmlx/dhtmlxWindows/skins/dhtmlx_window.css" rel="stylesheet" type="text/css"></link>  
    <link href="/form/dhtmlx/dhtmlxMenu/skins/dhtmlxmenu_glassy_blue.css" rel="stylesheet" type="text/css"></link>  
    <script src="/base/base.js" type="text/javascript">
</script>      <script src="/base/base.res.js" type="text/javascript">
</script>      <script src="/form/form.res.js" type="text/javascript">
</script>      <script src="/form/form.js" type="text/javascript">
</script>      <script language="javascript" src="/UI/system/resources/system.res.js">
</script>      <script language="javascript" src="/component/data/data.js">
</script>      <style rel="stylesheet" type="text/css">.splitter { width: 100%; height: 100%; } .xui-splitter-root { position: relative; width: 100%; height: 100%; overflow: hidden; } .xui-splitter-region { position: absolute; overflow: auto; background-color: white; } .xui-splitter-left { top: 0; left: 0; height: 100%; } .xui-splitter-right { top: 0; right: 0; height: 100%; } .xui-splitter-top { top: 0; left: 0; width: 100%; } .xui-splitter-bottom { bottom: 0; left: 0; width: 100%; } .xui-splitter-handler { position: absolute; background: #DFE8F6; } .xui-splitter-handler-h { top: 0; width: 5px; height: 100%; } .xui-splitter-handler-v { left: 0; height: 5px; width: 100%; } .xui-splitter-btn { position: absolute; } .xui-splitter-btn-h { left:0; bottom: 20px; margin-top: -35px; margin-left: 3px; color: white; background-color: #DFE8F6; cursor: pointer; padding: 5px; } .xui-splitter-btn-h-right { left:-27px; bottom: 20px; margin-top: -35px; margin-left: 3px; color: white; background-color: #DFE8F6; cursor: pointer; padding: 5px; } .xui-splitter-btn-v { right:20px; margin-left: -35px; bottom: 3px; color: white; background-color: #DFE8F6; cursor: pointer; padding: 5px; } .xui-splitter-btn-v-up { right:20px; margin-left: -35px; top: 0; color: white; background-color: #DFE8F6; cursor: pointer; padding: 5px; }</style>  
    <meta content="ajaxforms" http-equiv="Media-Type"></meta>  
    <meta content="AJAX, Javascript, Web, XForms, XSLTForms, Exemples, Samples" name="keywords"></meta>  
    <link href="/UI/system/icons/system.icon.css" rel="stylesheet" type="text/css"></link>  
    <script>

			onerror = pageErrorHandler;
			function pageErrorHandler(msg, url, line, stack) {
				msg = ('string'==typeof(msg) &amp;&amp; msg)? msg.replace(/Uncaught Error:/,''):'未知错误';
				msg = justep.String.trim(msg);
				if (msg.substring(0,1) == "{"){
					/*认为是json格式的数据*/
					var msgs = JSON.parse(msg);
					var code = msgs.code;
					var message = msgs.message;
					var reason = msgs.reason;
					var messages = msgs.messages;
					var javaStack = msgs.stack;
					var javaUrl = msgs.url
					var javaParam = msgs.param;
					if (code!=null &amp;&amp; code!=undefined &amp;&amp; code!=""){
						message = code + ", " + message;
					}
					var detail = "";
					if (javaStack){
						detail += javaStack; 
					} 
					if (javaUrl){
						detail += '\n\r url:' + javaUrl;
						if (javaParam){
							detail += '\n\r param:' + javaParam;
						}
					}
					if(url){
						detail += ('\n at ('+url); 
						if(line) detail += (':'+line); 
						detail += ')';
					}
					if(stack) detail += stack;	
					(new justep.System.showMessage()).open({"width":600,"msg":message,"details":detail,"title":"提示", "reason": reason, "messages": messages});
					return true;
				}else{
					var msgs = msg.split("|");
					if(justep.System.showMessage) {
						var msg = msgs.length &gt; 0 ? msgs[0] : "";
						var detail = msgs.length &gt; 1 ? (msgs[1] == "" ? msg : msgs[1]) : msg;
						if(url){detail += ('\n at ('+url); if(line) detail += (':'+line); detail += ')';}
						if(stack) detail += ('\n'+stack);
						(new justep.System.showMessage()).open({"width":600,"msg":msg,"details":detail,"title":"提示"});
						return true;
					} else {
						alert(msgs.length &gt; 0 ? msgs[0] : "未知错误");
						return false;
					}
				}
				var msgs = msg.split("|");
				if(justep.System.showMessage) {
					var tip = "";
					var reason = "";
					var others = "";
					var messages = "";
					if (msgs.length == 1){
						tip = msgs[0];
						reason = "";
						messages = "";
						others = "";					
					}else if (msgs.length == 2){
						tip = msgs[0];
						reason = "未知";
						messages = "";
						others = msgs[1];
					}else if (msgs.length == 3){
						tip = msgs[0];
						reason = msgs[1];
						messages = "";
						others = msgs[2];
					}else if (msgs.length == 3){
						tip = msgs[0];
						reason = msgs[1];
						messages = msgs[2]
						others = msgs[3];
					}else {
						tip = msgs[0];
						reason = msgs[1];
						messages = msgs[2]
						others = msgs[3];
					}
					if(url){
						others += ('\n at ('+url); 
						if(line) others += (':'+line); 
						others += ')';
					}
					if(stack){ 
						others += ('\n'+stack);
					}	
					(new justep.System.showMessage()).open({"width":600,"msg":tip,"details":others,"title":"提示","reason":reason,"messages":messages});
					return true;
				} else {
					alert(msgs.length &gt; 0 ? msgs[0] : "未知错误");
					return false;
				}
			}
			var _closeActivityed = false;
			function _closeActivity_(){
				window._noShowSessionTimeOut_ = true;
				if (!_closeActivityed){
					_closeActivityed = true;
					var log = justep.Context.getRequestParameter("log"); 
					if (log==1 || log=="1"){
						var process = justep.Context.getCurrentProcess();
						var activity = justep.Context.getCurrentActivity();
						var executor = justep.Context.getExecutor();
						if (process!=null &amp;&amp; activity!=null){
							var xmlHttpRequest = justep.Request.sendBizRequest(process, activity, "closeActivityAction", "", null, function(data){}, true, executor);
						}
					}else{
					}
				}
			}
			function _close_(){
				_closeActivity_();				
			}</script>  
    <link href="/UI/system/config/user.css" rel="stylesheet" type="text/css"></link>  
    <script id="htmlScript1" src="/UI/metrodetection/test_progress_info/process/TaskProgressInfo/process/taskProgressInfoPublic/mainActivity.js">
</script>      <script>
new justep.XBizData('proData',false,false,{'queryAction':"queryJINDU_VIEWAction",'saveAction':"saveJINDU_VIEWAction",'newAction':"createJINDU_VIEWAction",'dataModel':"/metrodetection/system_code/data",'dataType':"xml",'concept':"{'JINDU_VIEW':'JINDU_VIEW'}",'limit':-1,'idColumn':"{'name':'JINDU_VIEW','relation':'JINDU_VIEW','define':'JINDU_VIEW','type':'String'}",'directDelete':false,'deleteConfirm':true,'refreshConfirm':true,'updateMode':"whereAll",'orderBys':"{}",'defRelations':"{'FID':{'type':'String','relation':'JINDU_VIEW.FID','define':'JINDU_VIEW.FID','label':'FID'},'FPARENTID':{'type':'String','relation':'JINDU_VIEW.FPARENTID','define':'JINDU_VIEW.FPARENTID','label':'FPARENTID'},'TNAME':{'type':'String','relation':'JINDU_VIEW.TNAME','define':'JINDU_VIEW.TNAME','label':'TNAME'},'TPERSON':{'type':'String','relation':'JINDU_VIEW.TPERSON','define':'JINDU_VIEW.TPERSON','label':'TPERSON'},'TPERSONNAME':{'type':'String','relation':'JINDU_VIEW.TPERSONNAME','define':'JINDU_VIEW.TPERSONNAME','label':'TPERSONNAME'},'TSTART':{'type':'DateTime','relation':'JINDU_VIEW.TSTART','define':'JINDU_VIEW.TSTART','label':'TSTART'},'TEND':{'type':'DateTime','relation':'JINDU_VIEW.TEND','define':'JINDU_VIEW.TEND','label':'TEND'},'TEXECUTE':{'type':'String','relation':'JINDU_VIEW.TEXECUTE','define':'JINDU_VIEW.TEXECUTE','label':'TEXECUTE'},'TCHECK':{'type':'String','relation':'JINDU_VIEW.TCHECK','define':'JINDU_VIEW.TCHECK','label':'TCHECK'},'ROOMID':{'type':'Integer','relation':'JINDU_VIEW.ROOMID','define':'JINDU_VIEW.ROOMID','label':'ROOMID'},'ROOMAREA':{'type':'String','relation':'JINDU_VIEW.ROOMAREA','define':'JINDU_VIEW.ROOMAREA','label':'ROOMAREA'},'TOOLNO':{'type':'Integer','relation':'JINDU_VIEW.TOOLNO','define':'JINDU_VIEW.TOOLNO','label':'TOOLNO'},'LINEID':{'type':'Integer','relation':'JINDU_VIEW.LINEID','define':'JINDU_VIEW.LINEID','label':'LINEID'},'TASKID':{'type':'String','relation':'JINDU_VIEW.TASKID','define':'JINDU_VIEW.TASKID','label':'TASKID'}}",'treeOption':"{'isDelayLoad':false,'parentRelation':'FPARENTID'}"},'proData_part',{});</script>  
    <script>
new justep.XBizData('taskData',true,false,{'queryAction':"queryTEST_PROJECT_TASK_INFOAction",'saveAction':"saveTEST_PROJECT_TASK_INFOAction",'newAction':"createTEST_PROJECT_TASK_INFOAction",'dataModel':"/metrodetection/system_code/data",'dataType':"json",'concept':"{'TEST_PROJECT_TASK_INFO':'TEST_PROJECT_TASK_INFO'}",'limit':20,'idColumn':"{'name':'TEST_PROJECT_TASK_INFO','relation':'TEST_PROJECT_TASK_INFO','define':'TEST_PROJECT_TASK_INFO','type':'String'}",'directDelete':false,'deleteConfirm':true,'refreshConfirm':true,'updateMode':"whereAll",'orderBys':"{}",'defRelations':"{'pROJECTID':{'type':'Integer','relation':'TEST_PROJECT_TASK_INFO.pROJECTID','define':'TEST_PROJECT_TASK_INFO.pROJECTID','label':'项目ID'},'tASKTYPE':{'type':'Decimal','relation':'TEST_PROJECT_TASK_INFO.tASKTYPE','define':'TEST_PROJECT_TASK_INFO.tASKTYPE','label':'任务类型'},'tASKID':{'type':'Integer','relation':'TEST_PROJECT_TASK_INFO.tASKID','define':'TEST_PROJECT_TASK_INFO.tASKID','label':'任务ID'},'tASKNAME':{'type':'String','relation':'TEST_PROJECT_TASK_INFO.tASKNAME','define':'TEST_PROJECT_TASK_INFO.tASKNAME','label':'任务名称'},'pLANOPERATORID':{'type':'String','relation':'TEST_PROJECT_TASK_INFO.pLANOPERATORID','define':'TEST_PROJECT_TASK_INFO.pLANOPERATORID','label':'计划执行人'},'pLANSTARTDATE':{'type':'DateTime','relation':'TEST_PROJECT_TASK_INFO.pLANSTARTDATE','define':'TEST_PROJECT_TASK_INFO.pLANSTARTDATE','label':'计划开始日期'},'pLANENDINGDATE':{'type':'DateTime','relation':'TEST_PROJECT_TASK_INFO.pLANENDINGDATE','define':'TEST_PROJECT_TASK_INFO.pLANENDINGDATE','label':'计划结束日期'},'tESTTASKAREA':{'type':'String','relation':'TEST_PROJECT_TASK_INFO.tESTTASKAREA','define':'TEST_PROJECT_TASK_INFO.tESTTASKAREA','label':'区域'},'tESTTASKITERATIVE':{'type':'String','relation':'TEST_PROJECT_TASK_INFO.tESTTASKITERATIVE','define':'TEST_PROJECT_TASK_INFO.tESTTASKITERATIVE','label':'迭代'},'tESTTASKREASON':{'type':'Decimal','relation':'TEST_PROJECT_TASK_INFO.tESTTASKREASON','define':'TEST_PROJECT_TASK_INFO.tESTTASKREASON','label':'任务生成原因'},'aCTUALOPERATORID':{'type':'String','relation':'TEST_PROJECT_TASK_INFO.aCTUALOPERATORID','define':'TEST_PROJECT_TASK_INFO.aCTUALOPERATORID','label':'任务执行人'},'aCTUALSTARTDATE':{'type':'DateTime','relation':'TEST_PROJECT_TASK_INFO.aCTUALSTARTDATE','define':'TEST_PROJECT_TASK_INFO.aCTUALSTARTDATE','label':'任务开始日期'},'aCTUALENDINGDATE':{'type':'DateTime','relation':'TEST_PROJECT_TASK_INFO.aCTUALENDINGDATE','define':'TEST_PROJECT_TASK_INFO.aCTUALENDINGDATE','label':'任务结束日期'},'tASKEXECUTE':{'type':'Decimal','relation':'TEST_PROJECT_TASK_INFO.tASKEXECUTE','define':'TEST_PROJECT_TASK_INFO.tASKEXECUTE','label':'任务执行状态'},'tASKCHECK':{'type':'Integer','relation':'TEST_PROJECT_TASK_INFO.tASKCHECK','define':'TEST_PROJECT_TASK_INFO.tASKCHECK','label':'任务执行结果'},'tESTTASKFILE':{'type':'Text','relation':'TEST_PROJECT_TASK_INFO.tESTTASKFILE','define':'TEST_PROJECT_TASK_INFO.tESTTASKFILE','label':'测试任务下发XML文件'},'tESTTASKRESULTFILE':{'type':'Text','relation':'TEST_PROJECT_TASK_INFO.tESTTASKRESULTFILE','define':'TEST_PROJECT_TASK_INFO.tESTTASKRESULTFILE','label':'测试任务结果XML文件'}}"},'',{});</script>  
    <script id="xbl_script" language="javascript">
__initXBL__ = function(){	justep.XBLObject._registerClasses = function() {
justep.XBLObject._classes["/UI/system/components/window.xbl.xml#window"] = _xbl_JSClassDefine_window;
justep.XBLObject._classes["/UI/system/components/splitter.xbl.xml#splitter"] = _xbl_JSClassDefine_splitter;
 };
justep.XBLObject._registerClasses();function _xbl_JSClassDefine_window(obj) {
 	if (obj) {
 		this.domNode = obj;
  	obj.xblObject = this;
 	}
}
_xbl_JSClassDefine_window.prototype = justep.Object.extend(new justep.XBLObject(), eval({}));

function _xbl_JSClassDefine_splitter(obj) {
 	if (obj) {
 		this.domNode = obj;
  	obj.xblObject = this;
 	}
}
_xbl_JSClassDefine_splitter.prototype = justep.Object.extend(new justep.XBLObject(), eval({

			"initXBL" : function() {
			   	if(!this.domNode.id || this.domNode.id ==""){
					this.domNode.id = (new UUID()).valueOf();
			   	}
			   	var baseCls = '.xui-splitter-';
			   	var id = this.domNode.id; 
			   	this.el = $("#" + id);
				this.status = this.el.attr("status") || "normal";
				this.state = 1;
				if(this.status=='show-first' || this.status=='show-left' || this.status=='show-top'){
				   	this.state = 0;
				}else if(this.status=="show-second" || this.status=='show-right' || this.status=='show-bottom'){
				   	this.state = 2;
				}
				this.spacing = 5;
				this.resizable = this.domNode.getAttribute('resizable')?this.domNode.getAttribute('resizable')=="true": true;
			   	this.isHorz = this.el.attr("mode") === 'horz';
			   	this.hasHandler = this.el.attr("has-drag-bar") === 'true';
			   	this.hasArrowBtn = this.el.attr("has-arrow-button") === 'true';
			   	this.fixSize = this.el.attr("fix-size") || '50%';
			   	this.isAnchor = this.fixSize.indexOf('%') != -1;/*是百分比的*/

			   	this.rootEl = $("&gt;div" + baseCls + "root", this.el);
			   	var s = "&gt;div" + baseCls + "root &gt;div";
			   	this.leftEl = this.isHorz ? $(s + baseCls + "left", this.el) : $(s + baseCls + "top", this.el);
			   	this.rightEl = this.isHorz ? $(s + baseCls + "right", this.el) : $(s + baseCls + "bottom", this.el);
			   	this.handlerEl = $(s + baseCls + "handler", this.el);
			   	var that = this;
			   	if(this.hasHandler &amp;&amp; this.hasArrowBtn){
			   		this.arrowBtn = $("#" + id+" &gt; "+baseCls + "root &gt; "+baseCls + "handler &gt;"+baseCls + "btn");
			   		if(this.state != 1){
				   		var dir = this.arrowBtn.attr("role");
				   		$('i', this.arrowBtn).removeClass('icon-system-' + dir + '-dir');
				   		switch(dir){
				   			case 'up': dir = 'down'; break;
				   			case 'down': dir = 'up'; break;
				   			case 'left': dir = 'right'; break;
				   			case 'right': dir = 'left'; break;
				   		}
				   		$('i', this.arrowBtn).addClass('icon-system-' + dir + '-dir');
				   		this.arrowBtn.attr('role', dir);
			   		}
				   	this.arrowBtn.css('cursor', 'pointer');
				   	this.arrowBtn.bind('mousedown', function(event){
				   		that.splitBtnClick = true;
				   		setTimeout(function(){
				   			that.splitBtnClick = false;
				   		}, 50);
				   		var dir = $(this).attr("role");
				   		that._onResizeBtnClick(dir);
				   		$('i', this).removeClass('icon-system-' + dir + '-dir');
				   		switch(dir){
				   			case 'up': dir = 'down'; break;
				   			case 'down': dir = 'up'; break;
				   			case 'left': dir = 'right'; break;
				   			case 'right': dir = 'left'; break;
				   		}
				   		$('i', this).addClass('icon-system-' + dir + '-dir');
				   		$(this).attr('role', dir);
				   		if(event.stopPropagation)
				   			event.stopPropagation();
				   	});
			   	}
			},
			_onResizeBtnClick: function(role){
				if(!this.isHorz){
					role = role==='up'?'left':'right';
				}
				if((this.state === 0 &amp;&amp; role==='right')||(this.state === 2 &amp;&amp; role==='left')){
					return;
				}
				var oldState = this.state;
				if(this.state === 1){
					if(role==='left'){
						this.state = 2;
					}else{
						this.state = 0;
					}
				}else{
					if(this.state === 0){
						if(role==='left'){
							this.state = 1;
						}
					}else{
						if(role==='right'){
							this.state = 1;
						}	
					}
				}
				if(this.state!=oldState){
					this.onWindowResize();
					justep.XBLObject.resize(this.domNode.id);
				}
			},
			_getBorderWidth: function(el, s){
				if(s == 'tb'){
					return (parseInt(el.css("padding-top"))||0) 
						+ (parseInt(el.css("padding-bottom"))||0) 
						+ (parseInt(el.css("border-top"))||0) 
						+ (parseInt(el.css("border-bottom"))||0);  
				}else{
					return (parseInt(el.css("padding-left"))||0)
						+ (parseInt(el.css("padding-right"))||0) 
						+ (parseInt(el.css("border-left"))||0)
						+ (parseInt(el.css("border-right"))||0);  
				}
			},
			moveToStart: function(){
				if(this.state != 2){
					this.state = 2;
					this.onWindowResize();
					justep.XBLObject.resize(this.domNode.id);
				}
			},
			moveToMiddle: function(){
				if(this.state != 1){
					this.state = 1;
					this.onWindowResize();
					justep.XBLObject.resize(this.domNode.id);
				}
			},
			moveToEnd: function(){
				if(this.state != 0){
					this.state = 0;
					this.onWindowResize();
					justep.XBLObject.resize(this.domNode.id);
				}
			},
			onWindowResize: function(){
				var el = this.rootEl;

				/*为了解决 当前套在tab次页下时，初次有不显示的缺陷*/
				if(justep.Browser.IE7){
					el.width(this.el.width());
					el.height(this.el.height());
				}
				var l = this.isHorz ? el.width() : el.height();
				if(this.hasHandler){
					l -= this.isHorz ? this.handlerEl.width() : this.handlerEl.height();
				}
				var lw = rw = 0;
				if(!this.isNotCalcWidth){
					var	f = parseFloat(this.fixSize);
					if(this.isAnchor){
						lw = Math.round(l*f*0.01);
					}else{
						lw = Math.round(f);
					}
					this.calcWidth = lw;
				}
				if(this.state === 1){
					lw = this.calcWidth;
					rw = l - lw;
				}else if(this.state === 0){
					lw = l;
					rw = 0;
				}else if(this.state === 2){
					lw = 0;
					rw = l;
				}
				this.leftEl.css("overflow", "hidden");
				this.rightEl.css("overflow", "hidden");
				if(this.isHorz){
					this.leftEl.width(lw);
					this.rightEl.width(rw);
				}else{
					this.leftEl.height(lw);
					this.rightEl.height(rw);
				}

				if(this.hasHandler){
					if(this.isHorz){
						this.handlerEl.css("left", lw+"px");
					}else{
						this.handlerEl.css("top", lw+"px");
					}
				}
				var that = this;
				setTimeout(function(){
					that.leftEl.css("overflow", "auto");
					that.rightEl.css("overflow", "auto");
				}, 1);
			   	if(this.hasHandler &amp;&amp; this.resizable &amp;&amp; !this.mousedowned){
			   		this.mousedowned = true;
					this.handlerEl.bind("mousedown",function(){
						if(that.status=="normal"){
							if(!that.splitBtnClick) 
								that.buildDrag();
						}	
					});		
			   	}
			},
			buildDrag: function() {
				var me = this;
				if(!this.$H)
					this.$H = $("&lt;div /&gt;").appendTo("body");
				if(xforms.Core.isIE){
					this.$H[0].setCapture();
				}
				var splitter = this.handlerEl[0];
				var pos = this.cumulativeOffset(splitter);
				this.$H.css({position:"absolute",backgroundColor:"#999999",zIndex:"99999",fontSize:"1px"
						,top:pos[1],left:pos[0],height:splitter.offsetHeight,width:splitter.offsetWidth});
				this.$H.show();		
				this.minPosition = this.rootEl.offset()[this.isHorz?"left":"top"];
				this.maxPosition = this.minPosition + (this.isHorz?this.rootEl.outerWidth():this.rootEl.outerHeight()) - this.spacing;
				me.orgPos = {
					x : pos[0],
					y : pos[1]
				};
				me.draging_call = function(e) {
					me.draging(e);
				};
				me.done_call = function(e) {
					me.done(e);
				};
				$(document).bind("mousemove",me.draging_call);
				$(document).bind("mouseup",me.done_call);
			},
			cumulativeOffset: function(element) {
				var valueT = 0, valueL = 0;
				do {
					valueT += element.offsetTop  || 0;
					valueL += element.offsetLeft || 0;
					element = element.offsetParent;
			    }while(element);
			    return [valueL, valueT];
			},
			draging: function(e) {
				var attr = this.isHorz? "pageX" : "pageY";
				this.$H.css(this.isHorz?"left":"top",Math.min(Math.max((e[attr]-2),this.minPosition),this.maxPosition));
			},
			done: function() {
				var dir = this.isHorz? "offsetWidth" : "offsetHeight";
				var pos = this.cumulativeOffset(this.$H[0]);  //current pos
				var offset = pos[this.isHorz?0:1] - this.orgPos[this.isHorz?"x":"y"]; //relative old pos
				var orgSize = this.leftEl[0][dir]; 	//first width
				var newSize = orgSize + offset;
				var parentSize = this.rootEl[0][dir];
				var f = newSize;
				var s = parentSize - newSize - this.spacing;
				f==0?this.leftEl.hide():this.leftEl.show();
				s==0?this.rightEl.hide():this.rightEl.show();
				var dir = this.isHorz? "width" : "hight";
				this.calcWidth = f;
				this.isNotCalcWidth = true;
				if(xforms.Core.isIE){
					this.$H[0].releaseCapture();
				}
				this.$H.hide();
				$(document).unbind("mousemove",this.draging_call);
				$(document).unbind("mouseup",this.done_call);
				if(this.onRegionResize)
					this.onRegionResize({source:this});
				this.onWindowResize();
				justep.XBLObject.resize(this.domNode.id);
			}
		}));

	var ids=[{id:'e2b3cd1ade7d426ab0e652e1c3b8bdad', name:'/UI/system/components/window.xbl.xml#window', children:[{id:'HSplitter1', name:'/UI/system/components/splitter.xbl.xml#splitter', children:[{id:'grid1', name:'xforms:grid'},{id:'grid2', name:'xforms:grid'}]}]}]; 
justep.XBLObject.initXBL(ids);
}; </script>  
    <script id="xf_script" type="text/javascript">
xforms.Core.fileName='form.js';	
xf._a(null,'grid1');xf._a(null,'grid2');function init() {	
var begin = new Date().getTime();	
xf._b("instance('proData')",xf._f('instance',xf._i("proData")));	
xf._b("true()",xf._f('true'));	
xf._b("instance('proData')/TSTART",xf._g(xf._f('instance',xf._i("proData")),xf._h(false, xf._k("child",xf._j('','TSTART')))));	
xf._b("instance('proData')/TEND",xf._g(xf._f('instance',xf._i("proData")),xf._h(false, xf._k("child",xf._j('','TEND')))));	
xf._b("instance('proData')/ROOMID",xf._g(xf._f('instance',xf._i("proData")),xf._h(false, xf._k("child",xf._j('','ROOMID')))));	
xf._b("instance('proData')/TOOLNO",xf._g(xf._f('instance',xf._i("proData")),xf._h(false, xf._k("child",xf._j('','TOOLNO')))));	
xf._b("instance('proData')/LINEID",xf._g(xf._f('instance',xf._i("proData")),xf._h(false, xf._k("child",xf._j('','LINEID')))));	
xf._b("instance('taskData')",xf._f('instance',xf._i("taskData")));	
xf._b("instance('taskData')/pROJECTID",xf._g(xf._f('instance',xf._i("taskData")),xf._h(false, xf._k("child",xf._j('','pROJECTID')))));	
xf._b("instance('taskData')/tASKTYPE",xf._g(xf._f('instance',xf._i("taskData")),xf._h(false, xf._k("child",xf._j('','tASKTYPE')))));	
xf._b("instance('taskData')/tASKID",xf._g(xf._f('instance',xf._i("taskData")),xf._h(false, xf._k("child",xf._j('','tASKID')))));	
xf._b("instance('taskData')/pLANSTARTDATE",xf._g(xf._f('instance',xf._i("taskData")),xf._h(false, xf._k("child",xf._j('','pLANSTARTDATE')))));	
xf._b("instance('taskData')/pLANENDINGDATE",xf._g(xf._f('instance',xf._i("taskData")),xf._h(false, xf._k("child",xf._j('','pLANENDINGDATE')))));	
xf._b("instance('taskData')/tESTTASKREASON",xf._g(xf._f('instance',xf._i("taskData")),xf._h(false, xf._k("child",xf._j('','tESTTASKREASON')))));	
xf._b("instance('taskData')/aCTUALSTARTDATE",xf._g(xf._f('instance',xf._i("taskData")),xf._h(false, xf._k("child",xf._j('','aCTUALSTARTDATE')))));	
xf._b("instance('taskData')/aCTUALENDINGDATE",xf._g(xf._f('instance',xf._i("taskData")),xf._h(false, xf._k("child",xf._j('','aCTUALENDINGDATE')))));	
xf._b("instance('taskData')/tASKEXECUTE",xf._g(xf._f('instance',xf._i("taskData")),xf._h(false, xf._k("child",xf._j('','tASKEXECUTE')))));	
xf._b("instance('taskData')/tASKCHECK",xf._g(xf._f('instance',xf._i("taskData")),xf._h(false, xf._k("child",xf._j('','tASKCHECK')))));	
xf._b("tASKNAME",xf._h(false, xf._k("child",xf._j('','tASKNAME'))));	
xf._b("space-column",xf._h(false, xf._k("child",xf._j('','space-column'))));	
xf._b("TNAME",xf._h(false, xf._k("child",xf._j('','TNAME'))));	
xf._b("TPERSONNAME",xf._h(false, xf._k("child",xf._j('','TPERSONNAME'))));	
xf._b("TSTART",xf._h(false, xf._k("child",xf._j('','TSTART'))));	
xf._b("TEND",xf._h(false, xf._k("child",xf._j('','TEND'))));	
xf._b("TEXECUTE",xf._h(false, xf._k("child",xf._j('','TEXECUTE'))));	
xf._b("TCHECK",xf._h(false, xf._k("child",xf._j('','TCHECK'))));	
xforms.Schema.registerPrefix('xsd', 'http://www.w3.org/2001/XMLSchema');xforms.Schema.registerPrefix('ed', 'null');xforms.Schema.registerPrefix('tree', 'null');var xf_model_model1 = new xforms.XFModel('model1',null);	
var xf_action_action1=xf._n(null,null,null,null,false).add(xf._o(null,null,function(element, ctx, event){mainActivity.model1Load(event)}));xf._p(justep('model1'),"onload",null,function(evt) { xforms.run(xf_action_action1,'model1', evt,false)});	
new xforms.XFInstance2('taskData','model1',null,null,null,null,null,null,null,null,null,null,'whereAll');	
xf._c('xf-bind-6','model1',"instance('taskData')",null,"true()",null,null,null,null,null);	
xf._c('xf-bind-7','model1',"instance('taskData')/pROJECTID","xsd:integer",null,null,null,null,null,null);	
xf._c('xf-bind-8','model1',"instance('taskData')/tASKTYPE","xsd:float",null,null,null,null,null,null);	
xf._c('xf-bind-9','model1',"instance('taskData')/tASKID","xsd:integer",null,null,null,null,null,null);	
xf._c('xf-bind-10','model1',"instance('taskData')/pLANSTARTDATE","xsd:dateTime",null,null,null,null,null,null);	
xf._c('xf-bind-11','model1',"instance('taskData')/pLANENDINGDATE","xsd:dateTime",null,null,null,null,null,null);	
xf._c('xf-bind-12','model1',"instance('taskData')/tESTTASKREASON","xsd:float",null,null,null,null,null,null);	
xf._c('xf-bind-13','model1',"instance('taskData')/aCTUALSTARTDATE","xsd:dateTime",null,null,null,null,null,null);	
xf._c('xf-bind-14','model1',"instance('taskData')/aCTUALENDINGDATE","xsd:dateTime",null,null,null,null,null,null);	
xf._c('xf-bind-15','model1',"instance('taskData')/tASKEXECUTE","xsd:float",null,null,null,null,null,null);	
xf._c('xf-bind-16','model1',"instance('taskData')/tASKCHECK","xsd:integer",null,null,null,null,null,null);	
new xforms.XFGrid({id:'grid1',instance:'taskData',systemColumnsPro:'pROJECTID,tASKTYPE,tASKID,pLANOPERATORID,pLANSTARTDATE,pLANENDINGDATE,tESTTASKAREA,tESTTASKITERATIVE,tESTTASKREASON,aCTUALOPERATORID,aCTUALSTARTDATE,aCTUALENDINGDATE,tASKEXECUTE,tASKCHECK,tESTTASKFILE,tESTTASKRESULTFILE',onInit:null,type:'grid',smartRender:20,delay:false,ids:'tASKNAME,space-column',headNames:'任务名称,&amp;nbsp;',widths:'175,*',types:'ed,ro',hiddenColumns:'',aligns:',',serverSort:true,sorts:'na,na',fixColumnSize:null,nodeImgCallback:'',multiSelection:'',checkedRef:'',filters:'\u00A0,\u00A0',sysColumns:'',treeColumnReadonly:true,showTreeIndex:null,editMode:null,filterColumn:true,drag:null,beforeDragCallback:null,afterDragCallback:null,afterFillRowCallback:null,beforeIndexChangedCallback:null,afterIndexChangedCallback:null,contextMenuId:null,rightClickSelected:'true',rightClickCallback:null,allowCheckCallback:null,rowHeight:null,hdrRowH:null,hdrFilterH:null,moveColumn:null,rowValueChangedCallback:null,groupColumn:true,adjustColumn:true,saveColumn:true,showHeaderMenu:'hide-column,save-layout,group-column,adjust-column',hintCallback:null,cascade:null,hasChildrenCallback1:null,onRowCheck:null,onRowChecked:null,onRowCheckedAll:null,onRowExpand:null,onRowClick:'mainActivity.grid1RowClick',onRowDblClick:null,onLastEditorPressEnter:null,initFun:function(){}});	
new xforms.XFGrid({id:'grid2',instance:'proData',systemColumnsPro:'FID,FPARENTID,TPERSON,ROOMID,ROOMAREA,TOOLNO,LINEID,TASKID',onInit:null,type:'treegrid',smartRender:20,delay:false,ids:'TNAME,TPERSONNAME,TSTART,TEND,TEXECUTE,TCHECK,space-column',headNames:'名称,执行人,开始时间,结束时间,执行状态,检查结果,&amp;nbsp;',widths:'260,100,110,114,110,99,*',types:'tree,ed,ed,ed,ed,ed,ro',hiddenColumns:'',aligns:',,,,,,',serverSort:true,sorts:'na,na,na,na,na,na,na',fixColumnSize:null,nodeImgCallback:'',multiSelection:'',checkedRef:'',filters:'\u00A0,\u00A0,\u00A0,\u00A0,\u00A0,\u00A0,\u00A0',sysColumns:'',treeColumnReadonly:false,showTreeIndex:null,editMode:null,filterColumn:true,drag:null,beforeDragCallback:null,afterDragCallback:null,afterFillRowCallback:null,beforeIndexChangedCallback:null,afterIndexChangedCallback:null,contextMenuId:null,rightClickSelected:'true',rightClickCallback:null,allowCheckCallback:null,rowHeight:null,hdrRowH:null,hdrFilterH:null,moveColumn:null,rowValueChangedCallback:null,groupColumn:true,adjustColumn:true,saveColumn:true,showHeaderMenu:'hide-column,save-layout,group-column,adjust-column',hintCallback:null,cascade:null,hasChildrenCallback1:null,onRowCheck:null,onRowChecked:null,onRowCheckedAll:null,onRowExpand:null,onRowClick:null,onRowDblClick:null,onLastEditorPressEnter:null,initFun:function(){this.grid.bindColFormat(null,'TSTART','yyyy-MM-dd');this.grid.bindColFormat(null,'TEND','yyyy-MM-dd');}});	
xforms.DebugConsole.writeTime(begin, 'new js objects');	
begin = new Date().getTime();	
xforms.init();	
xforms.DebugConsole.writeTime(begin, 'xforms init');};	
var proData_part_loaded = false;	
function load_proData_part(callback){if (proData_part_loaded) return;proData_part_loaded = true;	
new xforms.XFInstance2('proData','model1',null,null,null,null,null,null,null,null,null,null,'whereAll');	
xf._c('xf-bind-0','model1',"instance('proData')",null,"true()",null,null,null,null,null);	
xf._c('xf-bind-1','model1',"instance('proData')/TSTART","xsd:dateTime",null,null,null,null,null,null);	
xf._c('xf-bind-2','model1',"instance('proData')/TEND","xsd:dateTime",null,null,null,null,null,null);	
xf._c('xf-bind-3','model1',"instance('proData')/ROOMID","xsd:integer",null,null,null,null,null,null);	
xf._c('xf-bind-4','model1',"instance('proData')/TOOLNO","xsd:integer",null,null,null,null,null,null);	
xf._c('xf-bind-5','model1',"instance('proData')/LINEID","xsd:integer",null,null,null,null,null,null);	
if(callback)callback();}	
var proData_part_init_loaded = false;	
function load_proData_part_init(){if (proData_part_init_loaded) return;proData_part_init_loaded = true;	
if(xforms.ready)justep('model1').xformsObject.construct_part();}	
var __actions__ = {	
};	
</script>   </head>    <body class="xui-body" onload="if (window.justep &amp;&amp; justep.XBLObject)justep.XBLObject.init();" style="margin:0; padding:0;height:100%;width:100%;">     <div id="statusPanel"></div>      <span id="infoPanel" style="position:absolute;display:none"></span>      <div id="visible-element" style="height:100%;width:100%;">       <div class="" id="rootView" style="height:100%;width:100%">         <div class="xui-splitter component_81628EC1 splitter" component="/UI/system/components/splitter.xbl.xml#splitter" fix-size="177px" has-arrow-button="true" has-drag-bar="true" id="HSplitter1" mode="horz" style="height:100%;width:100%;line-height:20px;">           <div class="xui-splitter-root">             <div class="xui-splitter-region xui-splitter-left">               <div class="component_6298A7A1 grid" data="taskData" id="grid1" onRowClick="mainActivity.grid1RowClick" right-click-selected="true" show-header-menu="hide-column,save-layout,group-column,adjust-column" smart-render="20" style="height:100%;line-height:normal;width:100%;;overflow:hidden" system-columns="pROJECTID,tASKTYPE,tASKID,pLANOPERATORID,pLANSTARTDATE,pLANENDINGDATE,tESTTASKAREA,tESTTASKITERATIVE,tESTTASKREASON,aCTUALOPERATORID,aCTUALSTARTDATE,aCTUALENDINGDATE,tASKEXECUTE,tASKCHECK,tESTTASKFILE,tESTTASKRESULTFILE"></div>             </div>              <div class="xui-splitter-region xui-splitter-right">               <div class="component_6298A7A1 grid" data="proData" id="grid2" right-click-selected="true" show-header-menu="hide-column,save-layout,group-column,adjust-column" smart-render="20" style="height:100%;width:100%;;overflow:hidden" system-columns="FID,FPARENTID,TPERSON,ROOMID,ROOMAREA,TOOLNO,LINEID,TASKID"></div>             </div>              <div class="xui-splitter-handler xui-splitter-handler-h">               <div class="xui-splitter-btn xui-splitter-btn-h" role="left">                 <i class="icon-system-left-dir white-icon"></i>               </div>             </div>           </div>         </div>       </div>     </div>      <script type="text/javascript">
if (typeof(xforms.Dialog) != "undefined") { xforms.Dialog.show('statusPanel'); }</script> 
  </body> 
</html>
